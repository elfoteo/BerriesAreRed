[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper, but for elements that hold values of specified types."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 4,
        "column": 0,
        "index": 99
      },
      "end": {
        "line": 7,
        "column": 3,
        "index": 228
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8,
          "column": 0,
          "index": 229
        },
        "end": {
          "line": 16,
          "column": 1,
          "index": 423
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\valueWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "ValueWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Read the value of the element"
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 9,
              "column": 2,
              "index": 275
            },
            "end": {
              "line": 11,
              "column": 5,
              "index": 319
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 12,
                "column": 2,
                "index": 322
              },
              "end": {
                "line": 15,
                "column": 3,
                "index": 421
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\valueWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "value",
          "kind": "function",
          "async": true,
          "memberof": "ValueWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ValueWrapper",
              "kind": "class"
            },
            {
              "name": "value",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ValueWrapper#value"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ValueWrapper",
        "kind": "class"
      }
    ],
    "namespace": "ValueWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper.\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "img"
                }
              ]
            },
            {
              "type": "text",
              "value": " tag."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0,
        "index": 147
      },
      "end": {
        "line": 9,
        "column": 3,
        "index": 317
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 10,
          "column": 0,
          "index": 318
        },
        "end": {
          "line": 19,
          "column": 1,
          "index": 649
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\imageWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 11
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 11
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 11,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "ImageWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ImageWrapper",
        "kind": "class"
      }
    ],
    "namespace": "ImageWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "a"
                }
              ]
            },
            {
              "type": "text",
              "value": " tag."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0,
        "index": 150
      },
      "end": {
        "line": 9,
        "column": 3,
        "index": 315
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 10,
          "column": 0,
          "index": 316
        },
        "end": {
          "line": 19,
          "column": 1,
          "index": 637
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\linkWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 11
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 11
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 11,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "LinkWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "LinkWrapper",
        "kind": "class"
      }
    ],
    "namespace": "LinkWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper.\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "li"
                }
              ]
            },
            {
              "type": "text",
              "value": " tag."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0,
        "index": 150
      },
      "end": {
        "line": 9,
        "column": 3,
        "index": 318
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 10,
          "column": 0,
          "index": 319
        },
        "end": {
          "line": 19,
          "column": 1,
          "index": 651
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\listItemWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 11
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 11
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 11,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "ListItemWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ListItemWrapper",
        "kind": "class"
      }
    ],
    "namespace": "ListItemWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper.\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "td"
                }
              ]
            },
            {
              "type": "text",
              "value": " tag."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0,
        "index": 263
      },
      "end": {
        "line": 11,
        "column": 3,
        "index": 431
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0,
          "index": 432
        },
        "end": {
          "line": 52,
          "column": 1,
          "index": 2123
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\tableCellWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "query",
        "lineNumber": 13
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 13
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 13
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 13,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TableCellWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TableCellWrapper",
        "kind": "class"
      }
    ],
    "namespace": "TableCellWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wrapper object of all found elements. This list mimics the behaviour of "
            },
            {
              "type": "link",
              "url": "Element",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Element"
                }
              ]
            },
            {
              "type": "text",
              "value": "\nby exposing similar methods. The call of these methods gets delegated to first element.\nBy default, the "
            },
            {
              "type": "inlineCode",
              "value": "ElementWrapper"
            },
            {
              "type": "text",
              "value": " acts as a proxy to the first matching element and hence\nit forwards function calls that belong to "
            },
            {
              "type": "link",
              "url": "Element",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Element"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 7,
        "column": 0,
        "index": 259
      },
      "end": {
        "line": 12,
        "column": 3,
        "index": 601
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 14,
          "column": 0,
          "index": 603
        },
        "end": {
          "line": 208,
          "column": 1,
          "index": 8213
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "elementType",
        "lineNumber": 15
      },
      {
        "title": "param",
        "name": "query",
        "lineNumber": 15
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 15
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 15
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 15,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "ElementWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": "",
          "tags": [
            {
              "title": "deprecated",
              "description": "Deprecated from version `1.0.3`. DOM element getter. Implicitly wait for the element to appears with timeout of 10 seconds.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "All elements mathing the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Element"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 34,
              "column": 2,
              "index": 1303
            },
            "end": {
              "line": 39,
              "column": 5,
              "index": 1706
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 40,
                "column": 2,
                "index": 1709
              },
              "end": {
                "line": 43,
                "column": 3,
                "index": 1856
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "All elements mathing the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Element"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "deprecated": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Deprecated from version "
                  },
                  {
                    "type": "inlineCode",
                    "value": "1.0.3"
                  },
                  {
                    "type": "text",
                    "value": ". DOM element getter. Implicitly wait for the element to appears with timeout of 10 seconds."
                  }
                ]
              }
            ]
          },
          "name": "get",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Describes the operation performed. The description is the same that is printed when performing the operation in REPL."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "property",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "errors": [
                "Missing or invalid tag type",
                "Missing or invalid tag name"
              ],
              "name": null
            },
            {
              "title": "description",
              "description": "Describes the operation performed. The description is the same that is printed when performing the operation in REPL.",
              "lineNumber": 2
            },
            {
              "title": "returns",
              "description": "Description of the current command that fetched this element(wrapper).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "link('google').description // prints \"'Link with text google'\"",
              "lineNumber": 4
            }
          ],
          "loc": {
            "start": {
              "line": 45,
              "column": 2,
              "index": 1860
            },
            "end": {
              "line": 51,
              "column": 5,
              "index": 2196
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 52,
                "column": 2,
                "index": 2199
              },
              "end": {
                "line": 54,
                "column": 3,
                "index": 2252
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "link('google').description // prints \"'Link with text google'\""
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Description of the current command that fetched this element(wrapper)."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "description",
          "kind": "member",
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "description",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#description"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Checks existence for element. "
                  },
                  {
                    "type": "inlineCode",
                    "value": "exists()"
                  },
                  {
                    "type": "text",
                    "value": " waits for "
                  },
                  {
                    "type": "inlineCode",
                    "value": "retryTimeout"
                  },
                  {
                    "type": "text",
                    "value": " before deciding that the page is loaded.\n(NOTE: "
                  },
                  {
                    "type": "inlineCode",
                    "value": "exists()"
                  },
                  {
                    "type": "text",
                    "value": " returns boolean from version "
                  },
                  {
                    "type": "inlineCode",
                    "value": "0.4.0"
                  },
                  {
                    "type": "text",
                    "value": ")"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "description",
              "description": "Checks existence for element. `exists()` waits for `retryTimeout` before deciding that the page is loaded.\n(NOTE: `exists()` returns boolean from version `0.4.0`)",
              "lineNumber": 1
            },
            {
              "title": "since",
              "description": "0.4.0",
              "lineNumber": 3
            },
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "true if exists, else false.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "example",
              "description": "// To 'short-circuit' non existence. However this should be done only if there is no network calls/reloads.\nelement.exists(0,0)",
              "lineNumber": 7
            },
            {
              "title": "example",
              "description": "link('google').exists()",
              "lineNumber": 10
            },
            {
              "title": "example",
              "description": "link('google').exists(1000)",
              "lineNumber": 12
            }
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 2,
              "index": 2256
            },
            "end": {
              "line": 70,
              "column": 5,
              "index": 2955
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 71,
                "column": 2,
                "index": 2958
              },
              "end": {
                "line": 83,
                "column": 3,
                "index": 3324
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// To 'short-circuit' non existence. However this should be done only if there is no network calls/reloads.\nelement.exists(0,0)"
            },
            {
              "description": "link('google').exists()"
            },
            {
              "description": "link('google').exists(1000)"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "true if exists, else false."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "since": "0.4.0",
          "name": "exists",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "exists",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#exists"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gets the "
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText",
                    "children": [
                      {
                        "type": "inlineCode",
                        "value": "innerText"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " of the element"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "description",
              "description": "Gets the [`innerText`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText) of the element",
              "lineNumber": 1
            },
            {
              "title": "returns",
              "description": "[`innerText`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText) of the element",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 85,
              "column": 2,
              "index": 3328
            },
            "end": {
              "line": 88,
              "column": 5,
              "index": 3589
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 89,
                "column": 2,
                "index": 3592
              },
              "end": {
                "line": 92,
                "column": 3,
                "index": 3689
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "link",
                        "title": null,
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText",
                        "children": [
                          {
                            "type": "inlineCode",
                            "value": "innerText"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " of the element"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "text",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "text",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#text"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Checks if element is visually visible. "
                  },
                  {
                    "type": "inlineCode",
                    "value": "isVisible()"
                  },
                  {
                    "type": "text",
                    "value": " is false when the element is overshadowed by another element,\nor if the element is outside the viewport."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "description",
              "description": "Checks if element is visually visible. `isVisible()` is false when the element is overshadowed by another element,\nor if the element is outside the viewport.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "true if visible, else false.",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 2,
              "index": 3693
            },
            "end": {
              "line": 100,
              "column": 5,
              "index": 4128
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 101,
                "column": 2,
                "index": 4131
              },
              "end": {
                "line": 127,
                "column": 3,
                "index": 5000
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "true if visible, else false."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "isVisible",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "isVisible",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#isVisible"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Checks if element is disabled"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "description",
              "description": "Checks if element is disabled",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "true if disabled, else false.",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 129,
              "column": 2,
              "index": 5004
            },
            "end": {
              "line": 134,
              "column": 5,
              "index": 5307
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 135,
                "column": 2,
                "index": 5310
              },
              "end": {
                "line": 138,
                "column": 3,
                "index": 5477
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "true if disabled, else false."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "isDisabled",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "isDisabled",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#isDisabled"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Checks if element is "
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable",
                    "children": [
                      {
                        "type": "text",
                        "value": "draggable"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "description",
              "description": "Checks if element is [draggable](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable).",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "true if disabled, else false.",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 140,
              "column": 2,
              "index": 5481
            },
            "end": {
              "line": 145,
              "column": 5,
              "index": 5867
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 147,
                "column": 2,
                "index": 5871
              },
              "end": {
                "line": 150,
                "column": 3,
                "index": 6040
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "true if disabled, else false."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "isDraggable",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "isDraggable",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#isDraggable"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Read attribute value of the element found."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "description",
              "description": "Read attribute value of the element found.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "name"
            },
            {
              "title": "returns",
              "description": "value of attribute",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "link('google').attribute('alt')",
              "lineNumber": 4
            }
          ],
          "loc": {
            "start": {
              "line": 152,
              "column": 2,
              "index": 6044
            },
            "end": {
              "line": 158,
              "column": 5,
              "index": 6233
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 159,
                "column": 2,
                "index": 6236
              },
              "end": {
                "line": 162,
                "column": 3,
                "index": 6354
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "link('google').attribute('alt')"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "name",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "value of attribute"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "attribute",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "attribute",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#attribute"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "DOM element getter. Implicitly wait for the element to appears with timeout of 10 seconds."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "description",
              "description": "DOM element getter. Implicitly wait for the element to appears with timeout of 10 seconds.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all elements matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Element"
                  }
                ]
              }
            },
            {
              "title": "example",
              "description": "// To loop over all the elements\nlet elements = await $('a').elements();\nfor (element of elements) {\n   console.log(await element.text());\n}",
              "lineNumber": 5
            },
            {
              "title": "example",
              "description": "textBox('username').value()\n(await textBox('username').elements())[0].value() # same as above",
              "lineNumber": 11
            },
            {
              "title": "example",
              "description": "$('.class').text()\n(await $('.class').elements())[0].text() # same as above",
              "lineNumber": 14
            },
            {
              "title": "example",
              "description": "let element = await $('a').element(0);\nconsole.log(await element.text());",
              "lineNumber": 17
            }
          ],
          "loc": {
            "start": {
              "line": 164,
              "column": 2,
              "index": 6358
            },
            "end": {
              "line": 184,
              "column": 5,
              "index": 7235
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 2,
                "index": 7238
              },
              "end": {
                "line": 187,
                "column": 3,
                "index": 7382
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// To loop over all the elements\nlet elements = await $('a').elements();\nfor (element of elements) {\n   console.log(await element.text());\n}"
            },
            {
              "description": "textBox('username').value()\n(await textBox('username').elements())[0].value() # same as above"
            },
            {
              "description": "$('.class').text()\n(await $('.class').elements())[0].text() # same as above"
            },
            {
              "description": "let element = await $('a').element(0);\nconsole.log(await element.text());"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all elements matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Element"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#elements"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "DOM element getter. Implicitly wait for the element to appears with timeout of 10 seconds."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "description",
              "description": "DOM element getter. Implicitly wait for the element to appears with timeout of 10 seconds.",
              "lineNumber": 1
            },
            {
              "title": "alias",
              "description": null,
              "lineNumber": 2,
              "name": "elements",
              "errors": [
                "Unknown content '()[0]'"
              ]
            },
            {
              "title": "param",
              "description": "Zero-based index of element to return",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "index"
            },
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "First element that matches the selector.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Element"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 189,
              "column": 2,
              "index": 7386
            },
            "end": {
              "line": 196,
              "column": 5,
              "index": 7852
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 197,
                "column": 2,
                "index": 7855
              },
              "end": {
                "line": 207,
                "column": 3,
                "index": 8211
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\elementWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "index",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Zero-based index of element to return"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "First element that matches the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Element"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "element",
          "kind": "function",
          "async": true,
          "memberof": "ElementWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ElementWrapper",
              "kind": "class"
            },
            {
              "name": "element",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ElementWrapper#element"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ElementWrapper",
        "kind": "class"
      }
    ],
    "namespace": "ElementWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wrapper object of all found elements. This list mimics the behaviour of "
            },
            {
              "type": "link",
              "url": "Element",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Element"
                }
              ]
            },
            {
              "type": "text",
              "value": "\nby exposing similar methods. The call of these methods gets delegated to first element.\nBy default, the "
            },
            {
              "type": "inlineCode",
              "value": "ElementWrapper"
            },
            {
              "type": "text",
              "value": " acts as a proxy to the first matching element and hence\nit forwards function calls that belong to "
            },
            {
              "type": "link",
              "url": "Element",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Element"
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "link",
              "url": "DollarWrapper",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "DollarWrapper"
                }
              ]
            },
            {
              "type": "text",
              "value": " is identical to "
            },
            {
              "type": "link",
              "url": "ElementWrapper",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "ElementWrapper"
                }
              ]
            },
            {
              "type": "text",
              "value": " except that it represents\nthe results of '"
            },
            {
              "type": "link",
              "url": "$",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "$"
                }
              ]
            },
            {
              "type": "text",
              "value": " selector."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 8,
        "column": 0,
        "index": 332
      },
      "end": {
        "line": 17,
        "column": 3,
        "index": 835
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0,
          "index": 837
        },
        "end": {
          "line": 50,
          "column": 1,
          "index": 2039
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\dollarWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 20
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 20
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 20,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "DollarWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DollarWrapper",
        "kind": "class"
      }
    ],
    "namespace": "DollarWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper, but for "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Text_content",
              "children": [
                {
                  "type": "text",
                  "value": "HTML text elements"
                }
              ]
            },
            {
              "type": "text",
              "value": ".\nSupported HTML tags:"
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"text\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"password\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/search",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"search\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"number\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"email\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/tel",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"tel\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/url",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"url\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input:not([type])"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " with no "
                    },
                    {
                      "type": "inlineCode",
                      "value": "type"
                    },
                    {
                      "type": "text",
                      "value": " attribute."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "textarea"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/contentEditable",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "*[contenteditable=\"true\"]"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0,
        "index": 171
      },
      "end": {
        "line": 19,
        "column": 3,
        "index": 1403
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 20,
          "column": 0,
          "index": 1404
        },
        "end": {
          "line": 30,
          "column": 1,
          "index": 1760
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\textWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 21
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 21
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 21,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TextWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TextWrapper",
        "kind": "class"
      }
    ],
    "namespace": "TextWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ValueWrapper + select().\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select",
              "children": [
                {
                  "type": "text",
                  "value": "Select"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 32,
        "column": 0,
        "index": 1074
      },
      "end": {
        "line": 36,
        "column": 3,
        "index": 1250
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 37,
          "column": 0,
          "index": 1251
        },
        "end": {
          "line": 78,
          "column": 1,
          "index": 2748
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\dropDownWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 38
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 38
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 38,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "DropDownWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Select option or options from a drop down"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "value(s) to be selected",
              "lineNumber": 2,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "values"
            },
            {
              "title": "example",
              "description": "// Select multiple values based on array of values provided\nawait dropDown('Vehicle:').select(['Car','Van'])",
              "lineNumber": 3
            },
            {
              "title": "example",
              "description": "// Select multiple values based on array if indices provided\nawait dropDown('Vehicle:').select({index : [0,1]})",
              "lineNumber": 7
            }
          ],
          "loc": {
            "start": {
              "line": 47,
              "column": 2,
              "index": 1584
            },
            "end": {
              "line": 57,
              "column": 5,
              "index": 1968
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 58,
                "column": 2,
                "index": 1971
              },
              "end": {
                "line": 61,
                "column": 3,
                "index": 2084
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\dropDownWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Select multiple values based on array of values provided\nawait dropDown('Vehicle:').select(['Car','Van'])"
            },
            {
              "description": "// Select multiple values based on array if indices provided\nawait dropDown('Vehicle:').select({index : [0,1]})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "values",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "value(s) to be selected"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "select",
          "kind": "function",
          "async": true,
          "memberof": "DropDownWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DropDownWrapper",
              "kind": "class"
            },
            {
              "name": "select",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "DropDownWrapper#select"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Overrides "
                  },
                  {
                    "type": "link",
                    "url": "ElementWrapper#elements",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ElementWrapper#elements"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", but for DropDown elements."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all elements matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "DropDown"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 68,
              "column": 2,
              "index": 2195
            },
            "end": {
              "line": 73,
              "column": 5,
              "index": 2543
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 74,
                "column": 2,
                "index": 2546
              },
              "end": {
                "line": 77,
                "column": 3,
                "index": 2746
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\dropDownWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all elements matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "DropDown"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "DropDownWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DropDownWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "DropDownWrapper#elements"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DropDownWrapper",
        "kind": "class"
      }
    ],
    "namespace": "DropDownWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ValueWrapper + select().\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/color",
              "children": [
                {
                  "type": "text",
                  "value": "Input Color"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 37,
        "column": 0,
        "index": 1146
      },
      "end": {
        "line": 41,
        "column": 3,
        "index": 1332
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 42,
          "column": 0,
          "index": 1333
        },
        "end": {
          "line": 67,
          "column": 1,
          "index": 2329
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\colorWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 43
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 43
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 43,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "ColorWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Overrides "
                  },
                  {
                    "type": "link",
                    "url": "ElementWrapper#elements",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ElementWrapper#elements"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", but for Color elements."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all elements matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Color"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 57,
              "column": 2,
              "index": 1785
            },
            "end": {
              "line": 62,
              "column": 5,
              "index": 2127
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 63,
                "column": 2,
                "index": 2130
              },
              "end": {
                "line": 66,
                "column": 3,
                "index": 2327
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\colorWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all elements matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Color"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "ColorWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ColorWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ColorWrapper#elements"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ColorWrapper",
        "kind": "class"
      }
    ],
    "namespace": "ColorWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ValueWrapper, but for FileField element.\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file",
              "children": [
                {
                  "type": "text",
                  "value": "Input File Field"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 37,
        "column": 0,
        "index": 1143
      },
      "end": {
        "line": 41,
        "column": 3,
        "index": 1349
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 42,
          "column": 0,
          "index": 1350
        },
        "end": {
          "line": 62,
          "column": 1,
          "index": 2254
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\fileFieldWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 43
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 43
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 43,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "FileFieldWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Overrides "
                  },
                  {
                    "type": "link",
                    "url": "ElementWrapper#elements",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ElementWrapper#elements"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", but for FileField elements."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all elements matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "FileField"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 52,
              "column": 2,
              "index": 1698
            },
            "end": {
              "line": 57,
              "column": 5,
              "index": 2048
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 58,
                "column": 2,
                "index": 2051
              },
              "end": {
                "line": 61,
                "column": 3,
                "index": 2252
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\fileFieldWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all elements matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "FileField"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "FileFieldWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FileFieldWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FileFieldWrapper#elements"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FileFieldWrapper",
        "kind": "class"
      }
    ],
    "namespace": "FileFieldWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ValueWrapper + select(), for "
            },
            {
              "type": "link",
              "url": "Range",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Range"
                }
              ]
            },
            {
              "type": "text",
              "value": " element.\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range",
              "children": [
                {
                  "type": "text",
                  "value": "Input Range"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 37,
        "column": 0,
        "index": 1146
      },
      "end": {
        "line": 41,
        "column": 3,
        "index": 1359
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 42,
          "column": 0,
          "index": 1360
        },
        "end": {
          "line": 71,
          "column": 1,
          "index": 2453
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\rangeWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 43
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 43
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 43,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "RangeWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Select the given value in the range."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "accepts float values",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "value"
            }
          ],
          "loc": {
            "start": {
              "line": 52,
              "column": 2,
              "index": 1697
            },
            "end": {
              "line": 55,
              "column": 5,
              "index": 1796
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 56,
                "column": 2,
                "index": 1799
              },
              "end": {
                "line": 59,
                "column": 3,
                "index": 1910
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\rangeWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "accepts float values"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "select",
          "kind": "function",
          "async": true,
          "memberof": "RangeWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "RangeWrapper",
              "kind": "class"
            },
            {
              "name": "select",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "RangeWrapper#select"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Overrides "
                  },
                  {
                    "type": "link",
                    "url": "ValueWrapper#elements",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ValueWrapper#elements"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", but for Range elements."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all range matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Range"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 61,
              "column": 2,
              "index": 1914
            },
            "end": {
              "line": 66,
              "column": 5,
              "index": 2251
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 67,
                "column": 2,
                "index": 2254
              },
              "end": {
                "line": 70,
                "column": 3,
                "index": 2451
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\rangeWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all range matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Range"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "RangeWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "RangeWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "RangeWrapper#elements"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "RangeWrapper",
        "kind": "class"
      }
    ],
    "namespace": "RangeWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper, but for HTML Button (including "
            },
            {
              "type": "inlineCode",
              "value": "input"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "button"
            },
            {
              "type": "text",
              "value": " tags) element.\nSupported HTML tags:"
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/submit",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"submit\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"image\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/reset",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"reset\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/button",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"button\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "button"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 42,
        "column": 0,
        "index": 1537
      },
      "end": {
        "line": 51,
        "column": 3,
        "index": 2197
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 52,
          "column": 0,
          "index": 2198
        },
        "end": {
          "line": 74,
          "column": 1,
          "index": 2949
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\buttonWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 53
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 53
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 53,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "ButtonWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ButtonWrapper",
        "kind": "class"
      }
    ],
    "namespace": "ButtonWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper + isChecked()/check()/uncheck().\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox",
              "children": [
                {
                  "type": "text",
                  "value": "Input Checkbox"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 48,
        "column": 0,
        "index": 1577
      },
      "end": {
        "line": 52,
        "column": 3,
        "index": 1794
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 53,
          "column": 0,
          "index": 1795
        },
        "end": {
          "line": 104,
          "column": 1,
          "index": 3376
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\checkBoxWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 54
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 54
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 54,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "CheckBoxWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get state of selected checkbox."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "example",
              "description": "await checkBox('Vehicle').isChecked()",
              "lineNumber": 2
            },
            {
              "title": "returns",
              "description": "true if checked, else false",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 63,
              "column": 2,
              "index": 2148
            },
            "end": {
              "line": 68,
              "column": 5,
              "index": 2303
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 69,
                "column": 2,
                "index": 2306
              },
              "end": {
                "line": 72,
                "column": 3,
                "index": 2413
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\checkBoxWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "await checkBox('Vehicle').isChecked()"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "true if checked, else false"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "isChecked",
          "kind": "function",
          "async": true,
          "memberof": "CheckBoxWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CheckBoxWrapper",
              "kind": "class"
            },
            {
              "name": "isChecked",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "CheckBoxWrapper#isChecked"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set checkbox to 'checked' state."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "example",
              "description": "await checkBox('Vehicle').check()",
              "lineNumber": 2
            }
          ],
          "loc": {
            "start": {
              "line": 74,
              "column": 2,
              "index": 2417
            },
            "end": {
              "line": 78,
              "column": 5,
              "index": 2517
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 2,
                "index": 2520
              },
              "end": {
                "line": 82,
                "column": 3,
                "index": 2612
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\checkBoxWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "await checkBox('Vehicle').check()"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "check",
          "kind": "function",
          "async": true,
          "memberof": "CheckBoxWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CheckBoxWrapper",
              "kind": "class"
            },
            {
              "name": "check",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "CheckBoxWrapper#check"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Clears checkbox's state, if set."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "example",
              "description": "await checkBox('Vehicle').uncheck()",
              "lineNumber": 2
            }
          ],
          "loc": {
            "start": {
              "line": 84,
              "column": 2,
              "index": 2616
            },
            "end": {
              "line": 88,
              "column": 5,
              "index": 2718
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 89,
                "column": 2,
                "index": 2721
              },
              "end": {
                "line": 92,
                "column": 3,
                "index": 2817
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\checkBoxWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "await checkBox('Vehicle').uncheck()"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "uncheck",
          "kind": "function",
          "async": true,
          "memberof": "CheckBoxWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CheckBoxWrapper",
              "kind": "class"
            },
            {
              "name": "uncheck",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "CheckBoxWrapper#uncheck"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Overrides "
                  },
                  {
                    "type": "link",
                    "url": "ElementWrapper#elements",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ElementWrapper#elements"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", but for Checkbox elements."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all checkboxes matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "CheckBox"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 2,
              "index": 2821
            },
            "end": {
              "line": 99,
              "column": 5,
              "index": 3171
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 100,
                "column": 2,
                "index": 3174
              },
              "end": {
                "line": 103,
                "column": 3,
                "index": 3374
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\checkBoxWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all checkboxes matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "CheckBox"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "CheckBoxWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CheckBoxWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "CheckBoxWrapper#elements"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CheckBoxWrapper",
        "kind": "class"
      }
    ],
    "namespace": "CheckBoxWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ElementWrapper + select()/deselect()/isSelected().\nRepresents HTML "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio",
              "children": [
                {
                  "type": "text",
                  "value": "Input Radio"
                }
              ]
            },
            {
              "type": "text",
              "value": " tag."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 48,
        "column": 0,
        "index": 1584
      },
      "end": {
        "line": 52,
        "column": 3,
        "index": 1803
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 53,
          "column": 0,
          "index": 1804
        },
        "end": {
          "line": 104,
          "column": 1,
          "index": 3404
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\radioButtonWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        },
        "name": "ElementWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 54
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 54
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 54,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "RadioButtonWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Check if radioButton is selected."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "example",
              "description": "await radioButton('Vehicle').isSelected()",
              "lineNumber": 2
            },
            {
              "title": "returns",
              "description": "true if selected, else false",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 63,
              "column": 2,
              "index": 2163
            },
            "end": {
              "line": 68,
              "column": 5,
              "index": 2325
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 69,
                "column": 2,
                "index": 2328
              },
              "end": {
                "line": 72,
                "column": 3,
                "index": 2437
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\radioButtonWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "await radioButton('Vehicle').isSelected()"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "true if selected, else false"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "isSelected",
          "kind": "function",
          "async": true,
          "memberof": "RadioButtonWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "RadioButtonWrapper",
              "kind": "class"
            },
            {
              "name": "isSelected",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "RadioButtonWrapper#isSelected"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Select the radioButton."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "example",
              "description": "await radioButton('Vehicle').select()",
              "lineNumber": 2
            }
          ],
          "loc": {
            "start": {
              "line": 74,
              "column": 2,
              "index": 2441
            },
            "end": {
              "line": 78,
              "column": 5,
              "index": 2536
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 2,
                "index": 2539
              },
              "end": {
                "line": 82,
                "column": 3,
                "index": 2633
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\radioButtonWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "await radioButton('Vehicle').select()"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "select",
          "kind": "function",
          "async": true,
          "memberof": "RadioButtonWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "RadioButtonWrapper",
              "kind": "class"
            },
            {
              "name": "select",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "RadioButtonWrapper#select"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Reset the radioButton."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "example",
              "description": "await radioButton('Vehicle').deselect()",
              "lineNumber": 2
            }
          ],
          "loc": {
            "start": {
              "line": 84,
              "column": 2,
              "index": 2637
            },
            "end": {
              "line": 88,
              "column": 5,
              "index": 2733
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 89,
                "column": 2,
                "index": 2736
              },
              "end": {
                "line": 92,
                "column": 3,
                "index": 2834
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\radioButtonWrapper.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "await radioButton('Vehicle').deselect()"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "deselect",
          "kind": "function",
          "async": true,
          "memberof": "RadioButtonWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "RadioButtonWrapper",
              "kind": "class"
            },
            {
              "name": "deselect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "RadioButtonWrapper#deselect"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Overrides "
                  },
                  {
                    "type": "link",
                    "url": "ElementWrapper#elements",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ElementWrapper#elements"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", but for RadioButton elements."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all radioButtons matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "RadioButton"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 2,
              "index": 2838
            },
            "end": {
              "line": 99,
              "column": 5,
              "index": 3196
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 100,
                "column": 2,
                "index": 3199
              },
              "end": {
                "line": 103,
                "column": 3,
                "index": 3402
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\radioButtonWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all radioButtons matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "RadioButton"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "RadioButtonWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "RadioButtonWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "RadioButtonWrapper#elements"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "RadioButtonWrapper",
        "kind": "class"
      }
    ],
    "namespace": "RadioButtonWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ValueWrapper + select().\nRepresents HTML Time Input. Supported elements:"
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"date\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"datetime-local\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/month",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"month\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"time\" i]"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/week",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "input[type=\"week\" i]'"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 52,
        "column": 0,
        "index": 1730
      },
      "end": {
        "line": 61,
        "column": 3,
        "index": 2386
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 62,
          "column": 0,
          "index": 2387
        },
        "end": {
          "line": 91,
          "column": 1,
          "index": 3576
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\timeFieldWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 63
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 63
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 63,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TimeFieldWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Select the given date."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Date"
              },
              "name": "value"
            }
          ],
          "loc": {
            "start": {
              "line": 72,
              "column": 2,
              "index": 2832
            },
            "end": {
              "line": 75,
              "column": 5,
              "index": 2894
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 76,
                "column": 2,
                "index": 2897
              },
              "end": {
                "line": 79,
                "column": 3,
                "index": 3008
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\timeFieldWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Date"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "select",
          "kind": "function",
          "async": true,
          "memberof": "TimeFieldWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "TimeFieldWrapper",
              "kind": "class"
            },
            {
              "name": "select",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "TimeFieldWrapper#select"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Overrides "
                  },
                  {
                    "type": "link",
                    "url": "ValueWrapper#elements",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ValueWrapper#elements"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", but for "
                  },
                  {
                    "type": "link",
                    "url": "TimeField",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "TimeField"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " elements."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all timeFields matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "TimeField"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 2,
              "index": 3012
            },
            "end": {
              "line": 86,
              "column": 5,
              "index": 3370
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 87,
                "column": 2,
                "index": 3373
              },
              "end": {
                "line": 90,
                "column": 3,
                "index": 3574
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\timeFieldWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all timeFields matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "TimeField"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "TimeFieldWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "TimeFieldWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "TimeFieldWrapper#elements"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TimeFieldWrapper",
        "kind": "class"
      }
    ],
    "namespace": "TimeFieldWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Behaves the same as ValueWrapper."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "loc": {
      "start": {
        "line": 70,
        "column": 0,
        "index": 2457
      },
      "end": {
        "line": 73,
        "column": 3,
        "index": 2528
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 74,
          "column": 0,
          "index": 2529
        },
        "end": {
          "line": 94,
          "column": 1,
          "index": 3621
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\textBoxWrapper.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "ValueWrapper"
        },
        "name": "ValueWrapper"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 75
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 75
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 75,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TextBoxWrapper",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Overrides "
                  },
                  {
                    "type": "link",
                    "url": "ValueWrapper#elements",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ValueWrapper#elements"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", but for TextBox elements."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Retry Interval in milliseconds (defaults to global settings).",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryInterval"
            },
            {
              "title": "param",
              "description": "Retry Timeout in milliseconds (defaults to global settings).",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "retryTimeout"
            },
            {
              "title": "returns",
              "description": "Array of all textBoxes matching the selector.",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "TextBox"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 84,
              "column": 2,
              "index": 3072
            },
            "end": {
              "line": 89,
              "column": 5,
              "index": 3417
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 90,
                "column": 2,
                "index": 3420
              },
              "end": {
                "line": 93,
                "column": 3,
                "index": 3619
              }
            },
            "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\elementWrapper\\textBoxWrapper.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "retryInterval",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Interval in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "retryTimeout",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Retry Timeout in milliseconds (defaults to global settings)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Array of all textBoxes matching the selector."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "TextBox"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "elements",
          "kind": "function",
          "async": true,
          "memberof": "TextBoxWrapper",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "TextBoxWrapper",
              "kind": "class"
            },
            {
              "name": "elements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "TextBoxWrapper#elements"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TextBoxWrapper",
        "kind": "class"
      }
    ],
    "namespace": "TextBoxWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Launches a browser with a tab. The browser will be closed when the parent node.js process is closed."
            },
            {
              "type": "html",
              "value": "<br>"
            },
            {
              "type": "text",
              "value": "\nNote : "
            },
            {
              "type": "inlineCode",
              "value": "openBrowser"
            },
            {
              "type": "text",
              "value": " launches the browser in headless mode by default, but when "
            },
            {
              "type": "inlineCode",
              "value": "openBrowser"
            },
            {
              "type": "text",
              "value": " is called from "
            },
            {
              "type": "link",
              "url": "repl",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "repl"
                }
              ]
            },
            {
              "type": "text",
              "value": " it launches the browser in headful mode."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await openBrowser({headless: false})",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await openBrowser()",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await openBrowser({args:['--window-size=1440,900']})",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await openBrowser({args: [\n     '--disable-gpu',\n      '--disable-dev-shm-usage',\n      '--disable-setuid-sandbox',\n      '--no-first-run',\n      '--no-sandbox',\n      '--no-zygote']}) # These are recommended args that has to be passed when running in docker",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": "eg. {headless: true|false, args:['--window-size=1440,900']}",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "options",
        "default": "{headless:true}"
      },
      {
        "title": "param",
        "description": "Option to open browser in headless/headful mode.",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.headless",
        "default": "true"
      },
      {
        "title": "param",
        "description": "[Chromium browser launch options](https://peter.sh/experiments/chromium-command-line-switches/).",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.args",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Remote host to connect to.",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.host",
        "default": "'127.0.0.1'"
      },
      {
        "title": "param",
        "description": "Determines which target the client should interact.(https://github.com/cyrus-and/chrome-remote-interface#cdpoptions-callback)",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.target"
      },
      {
        "title": "param",
        "description": "Remote debugging port, if not given connects to any open port.",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.port",
        "default": "0"
      },
      {
        "title": "param",
        "description": "If the browser should be called using the hostname itself or with IP address",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.useHostName",
        "default": "false"
      },
      {
        "title": "param",
        "description": "HTTPS/WSS frontend. Defaults to false.",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.secure",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Option to ignore certificate errors.",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.ignoreCertificateErrors",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Option to run each command after a delay. Useful to observe what is happening in the browser.",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.observe",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Option to modify delay time for observe mode. Accepts value in milliseconds.",
        "lineNumber": 28,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.observeTime",
        "default": "3000"
      },
      {
        "title": "param",
        "description": "Option to dump IO from browser.",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.dumpio",
        "default": "false"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 31,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 47,
        "column": 0,
        "index": 1717
      },
      "end": {
        "line": 79,
        "column": 3,
        "index": 3811
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 80,
          "column": 0,
          "index": 3812
        },
        "end": {
          "line": 113,
          "column": 2,
          "index": 5003
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openBrowser({headless: false})"
      },
      {
        "description": "await openBrowser()"
      },
      {
        "description": "await openBrowser({args:['--window-size=1440,900']})"
      },
      {
        "description": "await openBrowser({args: [\n     '--disable-gpu',\n      '--disable-dev-shm-usage',\n      '--disable-setuid-sandbox',\n      '--no-first-run',\n      '--no-sandbox',\n      '--no-zygote']}) # These are recommended args that has to be passed when running in docker"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "eg. {headless: true|false, args:['--window-size=1440,900']}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "default": "{headless:true}",
        "properties": [
          {
            "title": "param",
            "name": "options.headless",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to open browser in headless/headful mode."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.args",
            "lineNumber": 20,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://peter.sh/experiments/chromium-command-line-switches/",
                      "children": [
                        {
                          "type": "text",
                          "value": "Chromium browser launch options"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.host",
            "lineNumber": 21,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Remote host to connect to."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'127.0.0.1'"
          },
          {
            "title": "param",
            "name": "options.target",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Determines which target the client should interact.("
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://github.com/cyrus-and/chrome-remote-interface#cdpoptions-callback",
                      "children": [
                        {
                          "type": "text",
                          "value": "https://github.com/cyrus-and/chrome-remote-interface#cdpoptions-callback"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": ")"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          },
          {
            "title": "param",
            "name": "options.port",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Remote debugging port, if not given connects to any open port."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "0"
          },
          {
            "title": "param",
            "name": "options.useHostName",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "If the browser should be called using the hostname itself or with IP address"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.secure",
            "lineNumber": 25,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "HTTPS/WSS frontend. Defaults to false."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.ignoreCertificateErrors",
            "lineNumber": 26,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to ignore certificate errors."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.observe",
            "lineNumber": 27,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to run each command after a delay. Useful to observe what is happening in the browser."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.observeTime",
            "lineNumber": 28,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to modify delay time for observe mode. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "3000"
          },
          {
            "title": "param",
            "name": "options.dumpio",
            "lineNumber": 29,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to dump IO from browser."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ]
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "openBrowser",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "openBrowser",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".openBrowser"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Closes the browser and along with all of its tabs."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await closeBrowser()",
        "lineNumber": 3
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 115,
        "column": 0,
        "index": 5005
      },
      "end": {
        "line": 122,
        "column": 3,
        "index": 5136
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 123,
          "column": 0,
          "index": 5137
        },
        "end": {
          "line": 134,
          "column": 2,
          "index": 5466
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await closeBrowser()"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "closeBrowser",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "closeBrowser",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".closeBrowser"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Gives CRI client object (a wrapper around Chrome DevTools Protocol).\nRefer "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/cyrus-and/chrome-remote-interface",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/cyrus-and/chrome-remote-interface"
                }
              ]
            },
            {
              "type": "text",
              "value": "\nPlease refer "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://chromedevtools.github.io/devtools-protocol/",
              "children": [
                {
                  "type": "text",
                  "value": "Chrome DevTools Protocol"
                }
              ]
            },
            {
              "type": "text",
              "value": " for\nthe complete API."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 141,
        "column": 0,
        "index": 5609
      },
      "end": {
        "line": 148,
        "column": 3,
        "index": 5895
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 149,
          "column": 0,
          "index": 5896
        },
        "end": {
          "line": 149,
          "column": 57,
          "index": 5953
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "client",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "client",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".client"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Allows switching between tabs and windows using URL or page title or Window name."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "# Switch using URL\nawait switchTo(/taiko.dev/)",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "# Switch using Title\nawait switchTo(/Taiko/)",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "# Switch using Regex URL\nawait switchTo(/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/)",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "# Switch using wild cards in the Regex\nawait switchTo(/Go*gle/)",
        "lineNumber": 12
      },
      {
        "title": "example",
        "description": "# Switch to a window identifier\nawait openBrowser();\nawait goto('google.com');\nopenIncognitoWindow({ name: \"newyorktimes\"});\nswitchTo(/google.com/);\nswitchTo({ name: \"newyorktimes\"});",
        "lineNumber": 15
      },
      {
        "title": "example",
        "description": "openTab('https://taiko.dev', {name: 'taiko'})\nopenIncognitoWindow({ name: \"newyorktimes\"});\nswitchTo({name: 'taiko'});",
        "lineNumber": 22
      },
      {
        "title": "param",
        "description": "Regex (Regular expression) the tab's title/URL or `Object` with\nwindow name for example `{ name: \"windowname\"}`",
        "lineNumber": 26,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "arg"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 29,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 172,
        "column": 0,
        "index": 6415
      },
      "end": {
        "line": 202,
        "column": 3,
        "index": 7351
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 204,
          "column": 0,
          "index": 7353
        },
        "end": {
          "line": 237,
          "column": 2,
          "index": 8570
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# Switch using URL\nawait switchTo(/taiko.dev/)"
      },
      {
        "description": "# Switch using Title\nawait switchTo(/Taiko/)"
      },
      {
        "description": "# Switch using Regex URL\nawait switchTo(/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/)"
      },
      {
        "description": "# Switch using wild cards in the Regex\nawait switchTo(/Go*gle/)"
      },
      {
        "description": "# Switch to a window identifier\nawait openBrowser();\nawait goto('google.com');\nopenIncognitoWindow({ name: \"newyorktimes\"});\nswitchTo(/google.com/);\nswitchTo({ name: \"newyorktimes\"});"
      },
      {
        "description": "openTab('https://taiko.dev', {name: 'taiko'})\nopenIncognitoWindow({ name: \"newyorktimes\"});\nswitchTo({name: 'taiko'});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "arg",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Regex (Regular expression) the tab's title/URL or "
                },
                {
                  "type": "inlineCode",
                  "value": "Object"
                },
                {
                  "type": "text",
                  "value": " with\nwindow name for example "
                },
                {
                  "type": "inlineCode",
                  "value": "{ name: \"windowname\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "switchTo",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "switchTo",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".switchTo"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Add interceptor for the network call. Helps in overriding request or to mock response of a network call."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "# Case 1: Block a specific URL\nawait intercept(url)",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "# Case 2: Mock a response\nawait intercept(url, {mockObject})",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "# Case 3: Override request\nawait intercept(url, (request) => {request.continue({overrideObject})})",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "# Case 4: Redirect always\nawait intercept(url, redirectUrl)",
        "lineNumber": 12
      },
      {
        "title": "example",
        "description": "# Case 5: Mock response based on a request\nawait intercept(url, (request) => { request.respond({mockResponseObject}) })",
        "lineNumber": 15
      },
      {
        "title": "example",
        "description": "# Case 6: Block URL twice\nawait intercept(url, undefined, 2)",
        "lineNumber": 18
      },
      {
        "title": "example",
        "description": "# Case 7: Mock the response only 3 times\nawait intercept(url, {mockObject}, 3)",
        "lineNumber": 21
      },
      {
        "title": "param",
        "description": "request URL to intercept",
        "lineNumber": 25,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "requestUrl"
      },
      {
        "title": "param",
        "description": "action to be done after interception. For more examples refer to https://github.com/getgauge/taiko/issues/98#issuecomment-42024186",
        "lineNumber": 26,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "function"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "option"
      },
      {
        "title": "param",
        "description": "number of times the request has to be intercepted . Optional parameter",
        "lineNumber": 27,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "count"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 29,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 239,
        "column": 0,
        "index": 8572
      },
      "end": {
        "line": 269,
        "column": 3,
        "index": 9699
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 270,
          "column": 0,
          "index": 9700
        },
        "end": {
          "line": 277,
          "column": 2,
          "index": 9939
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# Case 1: Block a specific URL\nawait intercept(url)"
      },
      {
        "description": "# Case 2: Mock a response\nawait intercept(url, {mockObject})"
      },
      {
        "description": "# Case 3: Override request\nawait intercept(url, (request) => {request.continue({overrideObject})})"
      },
      {
        "description": "# Case 4: Redirect always\nawait intercept(url, redirectUrl)"
      },
      {
        "description": "# Case 5: Mock response based on a request\nawait intercept(url, (request) => { request.respond({mockResponseObject}) })"
      },
      {
        "description": "# Case 6: Block URL twice\nawait intercept(url, undefined, 2)"
      },
      {
        "description": "# Case 7: Mock the response only 3 times\nawait intercept(url, {mockObject}, 3)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "requestUrl",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "request URL to intercept"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "option",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "action to be done after interception. For more examples refer to "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://github.com/getgauge/taiko/issues/98#issuecomment-42024186",
                  "children": [
                    {
                      "type": "text",
                      "value": "https://github.com/getgauge/taiko/issues/98#issuecomment-42024186"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "function"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "count",
        "lineNumber": 27,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of times the request has to be intercepted . Optional parameter"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "intercept",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "intercept",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".intercept"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Activates emulation of network conditions."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "# Emulate offline conditions\nawait emulateNetwork(\"Offline\")",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "# Emulate slow network conditions\nawait emulateNetwork(\"Good2G\")",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "# Emulate precise network conditions\nawait emulateNetwork({ offline: false, downloadThroughput: 6400, uploadThroughput: 2560, latency: 500 })",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "# Emulate precise network conditions with any subset of these properties, with default fallbacks of `offline` as true and all numbers as 0\nawait emulateNetwork({ downloadThroughput: 6400, uploadThroughput: 2560, latency: 500 })",
        "lineNumber": 12
      },
      {
        "title": "param",
        "description": "'GPRS','Regular2G','Good2G','Good3G','Regular3G','Regular4G','DSL','WiFi','Offline', {offline: boolean, downloadThroughput: number, uploadThroughput: number, latency: number}",
        "lineNumber": 16,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        },
        "name": "networkType"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 279,
        "column": 0,
        "index": 9941
      },
      "end": {
        "line": 298,
        "column": 3,
        "index": 10816
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 300,
          "column": 0,
          "index": 10818
        },
        "end": {
          "line": 304,
          "column": 2,
          "index": 11045
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# Emulate offline conditions\nawait emulateNetwork(\"Offline\")"
      },
      {
        "description": "# Emulate slow network conditions\nawait emulateNetwork(\"Good2G\")"
      },
      {
        "description": "# Emulate precise network conditions\nawait emulateNetwork({ offline: false, downloadThroughput: 6400, uploadThroughput: 2560, latency: 500 })"
      },
      {
        "description": "# Emulate precise network conditions with any subset of these properties, with default fallbacks of `offline` as true and all numbers as 0\nawait emulateNetwork({ downloadThroughput: 6400, uploadThroughput: 2560, latency: 500 })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "networkType",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "'GPRS','Regular2G','Good2G','Good3G','Regular3G','Regular4G','DSL','WiFi','Offline', {offline: boolean, downloadThroughput: number, uploadThroughput: number, latency: number}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "emulateNetwork",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "emulateNetwork",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".emulateNetwork"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Overrides the values of device screen dimensions according to a predefined list of devices. To provide custom device dimensions, use setViewPort API."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await emulateDevice('iPhone 6')",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "See [device model](https://docs.taiko.dev/devices) for a list of all device models.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "deviceModel"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 306,
        "column": 0,
        "index": 11047
      },
      "end": {
        "line": 315,
        "column": 3,
        "index": 11408
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 317,
          "column": 0,
          "index": 11410
        },
        "end": {
          "line": 317,
          "column": 45,
          "index": 11455
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await emulateDevice('iPhone 6')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "deviceModel",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "See "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://docs.taiko.dev/devices",
                  "children": [
                    {
                      "type": "text",
                      "value": "device model"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " for a list of all device models."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "emulateDevice",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "emulateDevice",
        "scope": "static"
      }
    ],
    "namespace": ".emulateDevice"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Overrides the values of device screen dimensions"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await setViewPort({width:600, height:800})",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "See [chrome devtools setDeviceMetricsOverride](https://chromedevtools.github.io/devtools-protocol/tot/Emulation#method-setDeviceMetricsOverride) for a list of options",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 324,
        "column": 0,
        "index": 11641
      },
      "end": {
        "line": 333,
        "column": 3,
        "index": 11991
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 334,
          "column": 0,
          "index": 11992
        },
        "end": {
          "line": 341,
          "column": 2,
          "index": 12226
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await setViewPort({width:600, height:800})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "See "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://chromedevtools.github.io/devtools-protocol/tot/Emulation#method-setDeviceMetricsOverride",
                  "children": [
                    {
                      "type": "text",
                      "value": "chrome devtools setDeviceMetricsOverride"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " for a list of options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "setViewPort",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setViewPort",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".setViewPort"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Changes the timezone of the page. See "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "metaZones.txt"
                }
              ]
            },
            {
              "type": "text",
              "value": "\nfor a list of supported timezone IDs."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await emulateTimezone('America/Jamaica')",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 343,
        "column": 0,
        "index": 12228
      },
      "end": {
        "line": 348,
        "column": 3,
        "index": 12521
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 350,
          "column": 0,
          "index": 12523
        },
        "end": {
          "line": 353,
          "column": 2,
          "index": 12694
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await emulateTimezone('America/Jamaica')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "timezoneId",
        "lineNumber": 350
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "emulateTimezone",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "emulateTimezone",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".emulateTimezone"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Launches a new tab. If url is provided, the new tab is opened with the url loaded."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await openTab('https://taiko.dev')",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await openTab() # opens a blank tab.",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await openTab('https://taiko.dev', {name: 'taiko'}) # Tab with identifier",
        "lineNumber": 6
      },
      {
        "title": "param",
        "description": "Url of page to open in newly created tab.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "targetUrl",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the reload. Default navigation timeout is 5000 milliseconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Tab identifier",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.name"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click. Accepts value in milliseconds.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "5000"
      },
      {
        "title": "param",
        "description": "time to wait to check for occurrence of page load events. Accepts value in milliseconds.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Page load events to implicitly wait for. Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 355,
        "column": 0,
        "index": 12696
      },
      "end": {
        "line": 372,
        "column": 3,
        "index": 13957
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 373,
          "column": 0,
          "index": 13958
        },
        "end": {
          "line": 401,
          "column": 2,
          "index": 14908
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openTab('https://taiko.dev')"
      },
      {
        "description": "await openTab() # opens a blank tab."
      },
      {
        "description": "await openTab('https://taiko.dev', {name: 'taiko'}) # Tab with identifier"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "targetUrl",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Url of page to open in newly created tab."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "default": "undefined"
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the reload. Default navigation timeout is 5000 milliseconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.name",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Tab identifier"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "5000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait to check for occurrence of page load events. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Page load events to implicitly wait for. Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "openTab",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "openTab",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".openTab"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Opens the specified URL in the browser's window. Adds "
            },
            {
              "type": "inlineCode",
              "value": "http"
            },
            {
              "type": "text",
              "value": " protocol to the URL if not present."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await openIncognitoWindow('https://google.com', { name: 'windowName' }) - Open a incognito window",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "URL to navigate page to.",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Window name (required).",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.name"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Map with extra HTTP headers.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options.headers"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 403,
        "column": 0,
        "index": 14910
      },
      "end": {
        "line": 417,
        "column": 3,
        "index": 16047
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 418,
          "column": 0,
          "index": 16048
        },
        "end": {
          "line": 453,
          "column": 2,
          "index": 17090
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openIncognitoWindow('https://google.com', { name: 'windowName' }) - Open a incognito window"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "URL to navigate page to."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.name",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Window name (required)."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          },
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.headers",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Map with extra HTTP headers."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Object"
            }
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "openIncognitoWindow",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "openIncognitoWindow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".openIncognitoWindow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Closes the specified browser window."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await closeIncognitoWindow('windowName') - Close incognito window",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "incognito window name",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "windowName"
      }
    ],
    "loc": {
      "start": {
        "line": 455,
        "column": 0,
        "index": 17092
      },
      "end": {
        "line": 460,
        "column": 3,
        "index": 17275
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 461,
          "column": 0,
          "index": 17276
        },
        "end": {
          "line": 483,
          "column": 2,
          "index": 17957
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await closeIncognitoWindow('windowName') - Close incognito window"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "arg",
        "lineNumber": 461
      },
      {
        "title": "param",
        "name": "windowName",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "incognito window name"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "closeIncognitoWindow",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "closeIncognitoWindow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".closeIncognitoWindow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Closes the given tab with given URL or closes current tab."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "# Closes the current tab.\nawait closeTab()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "# Closes all the tabs with Title 'Open Source Test Automation Framework | Gauge'.\nawait closeTab('Open Source Test Automation Framework | Gauge')",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "# Closes all the tabs with URL 'https://gauge.org'.\nawait closeTab('https://gauge.org')",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "# Closes all the tabs with Regex Title 'Go*gle'\nawait closeTab(/Go*gle/)",
        "lineNumber": 12
      },
      {
        "title": "example",
        "description": "# Closes all the tabs with Regex URL '/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/'\nawait closeTab(/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/)",
        "lineNumber": 15
      },
      {
        "title": "param",
        "description": "URL/Page title of the tab to close.",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "targetUrl",
        "default": "undefined"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 21,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 485,
        "column": 0,
        "index": 17959
      },
      "end": {
        "line": 507,
        "column": 3,
        "index": 18733
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 508,
          "column": 0,
          "index": 18734
        },
        "end": {
          "line": 542,
          "column": 2,
          "index": 19870
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# Closes the current tab.\nawait closeTab()"
      },
      {
        "description": "# Closes all the tabs with Title 'Open Source Test Automation Framework | Gauge'.\nawait closeTab('Open Source Test Automation Framework | Gauge')"
      },
      {
        "description": "# Closes all the tabs with URL 'https://gauge.org'.\nawait closeTab('https://gauge.org')"
      },
      {
        "description": "# Closes all the tabs with Regex Title 'Go*gle'\nawait closeTab(/Go*gle/)"
      },
      {
        "description": "# Closes all the tabs with Regex URL '/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/'\nawait closeTab(/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "identifier",
        "lineNumber": 508
      },
      {
        "title": "param",
        "name": "targetUrl",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "URL/Page title of the tab to close."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "default": "undefined"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "closeTab",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "closeTab",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".closeTab"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Override specific permissions to the given origin"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await overridePermissions('http://maps.google.com',['geolocation']);",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "url origin to override permissions",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "origin"
      },
      {
        "title": "param",
        "description": "See [chrome devtools permission types](https://chromedevtools.github.io/devtools-protocol/tot/Browser/#type-PermissionType) for a list of permission types.",
        "lineNumber": 7,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "permissions"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 544,
        "column": 0,
        "index": 19872
      },
      "end": {
        "line": 554,
        "column": 3,
        "index": 20312
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 555,
          "column": 0,
          "index": 20313
        },
        "end": {
          "line": 559,
          "column": 2,
          "index": 20537
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await overridePermissions('http://maps.google.com',['geolocation']);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "origin",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "url origin to override permissions"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "permissions",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "See "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://chromedevtools.github.io/devtools-protocol/tot/Browser/#type-PermissionType",
                  "children": [
                    {
                      "type": "text",
                      "value": "chrome devtools permission types"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " for a list of permission types."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "overridePermissions",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "overridePermissions",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".overridePermissions"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clears all permission overrides for all origins."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await clearPermissionOverrides()",
        "lineNumber": 3
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 561,
        "column": 0,
        "index": 20539
      },
      "end": {
        "line": 568,
        "column": 3,
        "index": 20680
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 569,
          "column": 0,
          "index": 20681
        },
        "end": {
          "line": 573,
          "column": 2,
          "index": 20865
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await clearPermissionOverrides()"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "clearPermissionOverrides",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clearPermissionOverrides",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clearPermissionOverrides"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets a cookie with the given cookie data. It may overwrite equivalent cookie if it already exists."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await setCookie(\"CSRFToken\",\"csrfToken\", {url: \"http://the-internet.herokuapp.com\"})",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await setCookie(\"CSRFToken\",\"csrfToken\", {domain: \"herokuapp.com\"})",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Cookie name.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Cookie value.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "sets cookie with the URL.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.url",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "sets cookie with the exact domain.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.domain",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "sets cookie with the exact path.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.path",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "True if cookie to be set is secure.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.secure",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "True if cookie to be set is http-only.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.httpOnly",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "Represents the cookie's 'SameSite' status: Refer https://tools.ietf.org/html/draft-west-first-party-cookies.",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.sameSite",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "UTC time in seconds, counted from January 1, 1970. eg: 2019-02-16T16:55:45.529Z",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.expires",
        "default": "undefined"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 19,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 575,
        "column": 0,
        "index": 20867
      },
      "end": {
        "line": 595,
        "column": 3,
        "index": 21999
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 596,
          "column": 0,
          "index": 22000
        },
        "end": {
          "line": 608,
          "column": 2,
          "index": 22491
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await setCookie(\"CSRFToken\",\"csrfToken\", {url: \"http://the-internet.herokuapp.com\"})"
      },
      {
        "description": "await setCookie(\"CSRFToken\",\"csrfToken\", {domain: \"herokuapp.com\"})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cookie name."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "value",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cookie value."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.url",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "sets cookie with the URL."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.domain",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "sets cookie with the exact domain."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.path",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "sets cookie with the exact path."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.secure",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "True if cookie to be set is secure."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.httpOnly",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "True if cookie to be set is http-only."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.sameSite",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Represents the cookie's 'SameSite' status: Refer "
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://tools.ietf.org/html/draft-west-first-party-cookies",
                      "children": [
                        {
                          "type": "text",
                          "value": "https://tools.ietf.org/html/draft-west-first-party-cookies"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.expires",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "UTC time in seconds, counted from January 1, 1970. eg: 2019-02-16T16:55:45.529Z"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "undefined"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "setCookie",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setCookie",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".setCookie"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Deletes browser cookies with matching name and URL or domain/path pair. If cookie name is not given or empty, all browser cookies are deleted."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await deleteCookies() # clears all browser cookies",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await deleteCookies(\"CSRFToken\", {url: \"http://the-internet.herokuapp.com\"})",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await deleteCookies(\"CSRFToken\", {domain: \"herokuapp.com\"})",
        "lineNumber": 7
      },
      {
        "title": "param",
        "description": "Cookie name.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "cookieName",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "deletes all the cookies with the given name where domain and path match provided URL. eg: https://google.com",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.url",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "deletes only cookies with the exact domain. eg: google.com",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.domain",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "deletes only cookies with the exact path. eg: Google/Chrome/Default/Cookies/..",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.path",
        "default": "undefined"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 610,
        "column": 0,
        "index": 22493
      },
      "end": {
        "line": 627,
        "column": 3,
        "index": 23386
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 628,
          "column": 0,
          "index": 23387
        },
        "end": {
          "line": 641,
          "column": 2,
          "index": 23974
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await deleteCookies() # clears all browser cookies"
      },
      {
        "description": "await deleteCookies(\"CSRFToken\", {url: \"http://the-internet.herokuapp.com\"})"
      },
      {
        "description": "await deleteCookies(\"CSRFToken\", {domain: \"herokuapp.com\"})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "cookieName",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cookie name."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "default": "undefined"
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.url",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "deletes all the cookies with the given name where domain and path match provided URL. eg: "
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://google.com",
                      "children": [
                        {
                          "type": "text",
                          "value": "https://google.com"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.domain",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "deletes only cookies with the exact domain. eg: google.com"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.path",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "deletes only cookies with the exact path. eg: Google/Chrome/Default/Cookies/.."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "deleteCookies",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "deleteCookies",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".deleteCookies"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Resize the browser window"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await resizeWindow({width:600, height:800})",
        "lineNumber": 3
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 643,
        "column": 0,
        "index": 23976
      },
      "end": {
        "line": 650,
        "column": 3,
        "index": 24105
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 651,
          "column": 0,
          "index": 24106
        },
        "end": {
          "line": 662,
          "column": 2,
          "index": 24590
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await resizeWindow({width:600, height:800})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 651,
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "resizeWindow",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "resizeWindow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".resizeWindow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Get browser cookies"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await getCookies()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await getCookies({urls:['https://the-internet.herokuapp.com']})",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "The list of URLs for which applicable cookies will be fetched",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          }
        },
        "name": "options.urls",
        "default": "undefined"
      },
      {
        "title": "returns",
        "description": "Array of cookie objects",
        "lineNumber": 11,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 663,
        "column": 0,
        "index": 24591
      },
      "end": {
        "line": 675,
        "column": 3,
        "index": 24935
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 676,
          "column": 0,
          "index": 24936
        },
        "end": {
          "line": 679,
          "column": 2,
          "index": 25067
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await getCookies()"
      },
      {
        "description": "await getCookies({urls:['https://the-internet.herokuapp.com']})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.urls",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The list of URLs for which applicable cookies will be fetched"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Array"
            },
            "default": "undefined"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of cookie objects"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "getCookies",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "getCookies",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".getCookies"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Overrides the Geolocation Position"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await setLocation({ latitude: 27.1752868, longitude: 78.040009, accuracy:20 })",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Latitude, longitude and accuracy to set the location.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Mock latitude",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "options.latitude"
      },
      {
        "title": "param",
        "description": "Mock longitude",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "options.longitude"
      },
      {
        "title": "param",
        "description": "Mock accuracy",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "options.accuracy"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 681,
        "column": 0,
        "index": 25069
      },
      "end": {
        "line": 693,
        "column": 3,
        "index": 25484
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 694,
          "column": 0,
          "index": 25485
        },
        "end": {
          "line": 698,
          "column": 2,
          "index": 25646
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await setLocation({ latitude: 27.1752868, longitude: 78.040009, accuracy:20 })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Latitude, longitude and accuracy to set the location."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.latitude",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Mock latitude"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            }
          },
          {
            "title": "param",
            "name": "options.longitude",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Mock longitude"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            }
          },
          {
            "title": "param",
            "name": "options.accuracy",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Mock accuracy"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        ]
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "setLocation",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setLocation",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".setLocation"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Opens the specified URL in the browser's tab. Adds "
            },
            {
              "type": "inlineCode",
              "value": "http"
            },
            {
              "type": "text",
              "value": " protocol to the URL if not present."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await goto('https://google.com')",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await goto('google.com')",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await goto('example.com',{ navigationTimeout:10000, headers:{'Authorization':'Basic cG9zdG1hbjpwYXNzd29y2A=='}})",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "const response = await goto('gauge.org'); if(response.status.code === 200) {console.log(\"Success!!\")}\nresponse: {\nredirectedResponse: [\n {\n   url: 'http://gauge.org/',\n   status: { code: 307, text: 'Internal Redirect' }\n }\n],\nurl: 'https://gauge.org/',\nstatus: { code: 200, text: '' }\n}",
        "lineNumber": 8
      },
      {
        "title": "param",
        "description": "URL to navigate page to.",
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Map with extra HTTP headers.",
        "lineNumber": 26,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options.headers"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": "response",
        "lineNumber": 29,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 700,
        "column": 0,
        "index": 25648
      },
      "end": {
        "line": 730,
        "column": 3,
        "index": 27171
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 731,
          "column": 0,
          "index": 27172
        },
        "end": {
          "line": 749,
          "column": 2,
          "index": 27712
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await goto('https://google.com')"
      },
      {
        "description": "await goto('google.com')"
      },
      {
        "description": "await goto('example.com',{ navigationTimeout:10000, headers:{'Authorization':'Basic cG9zdG1hbjpwYXNzd29y2A=='}})"
      },
      {
        "description": "const response = await goto('gauge.org'); if(response.status.code === 200) {console.log(\"Success!!\")}\nresponse: {\nredirectedResponse: [\n {\n   url: 'http://gauge.org/',\n   status: { code: 307, text: 'Internal Redirect' }\n }\n],\nurl: 'https://gauge.org/',\nstatus: { code: 200, text: '' }\n}"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "URL to navigate page to."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 25,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.headers",
            "lineNumber": 26,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Map with extra HTTP headers."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Object"
            }
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 27,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "response"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "goto",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "goto",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".goto"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Reloads the page."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await reload('https://google.com')",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await reload('https://google.com', { navigationTimeout: 10000 })",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "DEPRECATED URL to reload",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the reload. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Ignore Cache on reload - Default to false",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.ignoreCache",
        "default": "false"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 751,
        "column": 0,
        "index": 27714
      },
      "end": {
        "line": 767,
        "column": 3,
        "index": 28764
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 768,
          "column": 0,
          "index": 28765
        },
        "end": {
          "line": 787,
          "column": 2,
          "index": 29433
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await reload('https://google.com')"
      },
      {
        "description": "await reload('https://google.com', { navigationTimeout: 10000 })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "DEPRECATED URL to reload"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the reload. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.ignoreCache",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Ignore Cache on reload - Default to false"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "reload",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "reload",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".reload"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Mimics browser back button click functionality."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await goBack()",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goBack. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 789,
        "column": 0,
        "index": 29435
      },
      "end": {
        "line": 801,
        "column": 3,
        "index": 30271
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 802,
          "column": 0,
          "index": 30272
        },
        "end": {
          "line": 808,
          "column": 2,
          "index": 30495
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await goBack()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goBack. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "goBack",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "goBack",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".goBack"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Mimics browser forward button click functionality."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await goForward()",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goForward. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 810,
        "column": 0,
        "index": 30497
      },
      "end": {
        "line": 822,
        "column": 3,
        "index": 31342
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 823,
          "column": 0,
          "index": 31343
        },
        "end": {
          "line": 829,
          "column": 2,
          "index": 31572
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await goForward()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goForward. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "goForward",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "goForward",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".goForward"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then clicks in the center of the element. If there's no element matching selector, the method throws an error."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click('Get Started')",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await click(link('Get Started'))",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await click({x : 170, y : 567})",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "await click('Get Started', { navigationTimeout: 60000,  force: true })",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "await click('Get Started', { navigationTimeout: 60000 }, below('text'))",
        "lineNumber": 10
      },
      {
        "title": "example",
        "description": "await click('Get Started', { navigationTimeout: 60000, position: 'right' }, below('text'))",
        "lineNumber": 12
      },
      {
        "title": "param",
        "description": "A selector to search for element to click / coordinates of the elemets to click on. If there are multiple elements satisfying the selector, the first will be clicked.",
        "lineNumber": 14,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "`left`, `right`, or `middle`.",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.button",
        "default": "'left'"
      },
      {
        "title": "param",
        "description": "Number of times to click on the element.",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.clickCount",
        "default": "1"
      },
      {
        "title": "param",
        "description": "Number of elements to loop through to match the element with given selector.",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.elementsToMatch",
        "default": "10"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts time in milliseconds.",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Available positions right, left, topRight, topLeft, bottomRight, bottomLeft",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.position",
        "default": "'right'"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 25,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 27,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 885,
        "column": 0,
        "index": 32998
      },
      "end": {
        "line": 913,
        "column": 3,
        "index": 35141
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 914,
          "column": 0,
          "index": 35142
        },
        "end": {
          "line": 919,
          "column": 2,
          "index": 35365
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click('Get Started')"
      },
      {
        "description": "await click(link('Get Started'))"
      },
      {
        "description": "await click({x : 170, y : 567})"
      },
      {
        "description": "await click('Get Started', { navigationTimeout: 60000,  force: true })"
      },
      {
        "description": "await click('Get Started', { navigationTimeout: 60000 }, below('text'))"
      },
      {
        "description": "await click('Get Started', { navigationTimeout: 60000, position: 'right' }, below('text'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to click / coordinates of the elemets to click on. If there are multiple elements satisfying the selector, the first will be clicked."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.button",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "left"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "right"
                    },
                    {
                      "type": "text",
                      "value": ", or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "middle"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'left'"
          },
          {
            "title": "param",
            "name": "options.clickCount",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of times to click on the element."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "1"
          },
          {
            "title": "param",
            "name": "options.elementsToMatch",
            "lineNumber": 20,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of elements to loop through to match the element with given selector."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "10"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 21,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts time in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.position",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Available positions right, left, topRight, topLeft, bottomRight, bottomLeft"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'right'"
          }
        ],
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "click",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "click",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".click"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then double clicks the element. If there's no element matching selector, the method throws an error."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await doubleClick('Get Started')",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await doubleClick(button('Get Started'))",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await doubleClick('Get Started', { waitForNavigation: true,  force: true })",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await doubleClick('Get Started', { waitForNavigation: false }, below('text'))",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": "A selector to search for element to click. If there are multiple elements satisfying the selector, the first will be double clicked.",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 16,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 921,
        "column": 0,
        "index": 35367
      },
      "end": {
        "line": 940,
        "column": 3,
        "index": 36449
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 941,
          "column": 0,
          "index": 36450
        },
        "end": {
          "line": 947,
          "column": 2,
          "index": 36735
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await doubleClick('Get Started')"
      },
      {
        "description": "await doubleClick(button('Get Started'))"
      },
      {
        "description": "await doubleClick('Get Started', { waitForNavigation: true,  force: true })"
      },
      {
        "description": "await doubleClick('Get Started', { waitForNavigation: false }, below('text'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to click. If there are multiple elements satisfying the selector, the first will be double clicked."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "doubleClick",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "doubleClick",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".doubleClick"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then right clicks the element. If there's no element matching selector, the method throws an error."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await rightClick('Get Started')",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await rightClick(text('Get Started'), { force: true})",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "A selector to search for element to right click. If there are multiple elements satisfying the selector, the first will be clicked.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "Click options.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 12,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 949,
        "column": 0,
        "index": 36737
      },
      "end": {
        "line": 964,
        "column": 3,
        "index": 37662
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 965,
          "column": 0,
          "index": 37663
        },
        "end": {
          "line": 971,
          "column": 2,
          "index": 37948
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await rightClick('Get Started')"
      },
      {
        "description": "await rightClick(text('Get Started'), { force: true})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to right click. If there are multiple elements satisfying the selector, the first will be clicked."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Click options."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "rightClick",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "rightClick",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rightClick"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches the source element with given selector and moves it to given destination selector\nor moves for given distance. If there's no element matching selector, the method throws an error.\nDrag and drop of HTML5 draggable does not work as expected, refer "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/getgauge/taiko/issues/279",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/getgauge/taiko/issues/279"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await dragAndDrop($(\"work\"),into($('work done')))",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await dragAndDrop($(\"work\"),{up:10,down:10,left:10,right:10}, { force: true})",
        "lineNumber": 7
      },
      {
        "title": "param",
        "description": "Element to be Dragged",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "source"
      },
      {
        "title": "param",
        "description": "Element for dropping the dragged element\n       or an object specifying the drag&drop distance to be moved from position of source element",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "destinationOrDistance"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 973,
        "column": 0,
        "index": 37950
      },
      "end": {
        "line": 988,
        "column": 3,
        "index": 38820
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 989,
          "column": 0,
          "index": 38821
        },
        "end": {
          "line": 994,
          "column": 2,
          "index": 39072
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await dragAndDrop($(\"work\"),into($('work done')))"
      },
      {
        "description": "await dragAndDrop($(\"work\"),{up:10,down:10,left:10,right:10}, { force: true})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "source",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Element to be Dragged"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "destination",
        "lineNumber": 989
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 989,
        "default": "{}"
      },
      {
        "title": "param",
        "name": "destinationOrDistance",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Element for dropping the dragged element\nor an object specifying the drag&drop distance to be moved from position of source element"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "dragAndDrop",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dragAndDrop",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".dragAndDrop"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then hovers over the center of the element. If there's no element matching selector, the method throws an error."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await hover('Get Started')",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await hover(link('Get Started'))",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await hover(link('Get Started'), { waitForEvents: ['firstMeaningfulPaint'],  force: true })",
        "lineNumber": 7
      },
      {
        "title": "param",
        "description": "A selector to search for element to right click. If there are multiple elements satisfying the selector, the first will be hovered.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      }
    ],
    "loc": {
      "start": {
        "line": 996,
        "column": 0,
        "index": 39074
      },
      "end": {
        "line": 1010,
        "column": 3,
        "index": 40018
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1011,
          "column": 0,
          "index": 40019
        },
        "end": {
          "line": 1017,
          "column": 2,
          "index": 40267
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await hover('Get Started')"
      },
      {
        "description": "await hover(link('Get Started'))"
      },
      {
        "description": "await hover(link('Get Started'), { waitForEvents: ['firstMeaningfulPaint'],  force: true })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to right click. If there are multiple elements satisfying the selector, the first will be hovered."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "hover",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "hover",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".hover"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector and focuses it. If there's no element matching selector, the method throws an error."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await focus(textBox('Username:'))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await focus(textBox('Username:'), { waitForEvents: ['firstMeaningfulPaint'], force: true })",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "A selector of an element to focus. If there are multiple elements satisfying the selector, the first will be focused.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      }
    ],
    "loc": {
      "start": {
        "line": 1019,
        "column": 0,
        "index": 40269
      },
      "end": {
        "line": 1031,
        "column": 3,
        "index": 41093
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1032,
          "column": 0,
          "index": 41094
        },
        "end": {
          "line": 1038,
          "column": 2,
          "index": 41348
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await focus(textBox('Username:'))"
      },
      {
        "description": "await focus(textBox('Username:'), { waitForEvents: ['firstMeaningfulPaint'], force: true })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector of an element to focus. If there are multiple elements satisfying the selector, the first will be focused."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "focus",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "focus",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".focus"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Types the given text into the focused or given element."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await write('admin')",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await write('admin', into(textBox(\"Username\"),{force:true})",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Text to type into the element.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": "A selector of an element to write into.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "Element"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "into"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Time to wait between key presses in milliseconds.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.delay",
        "default": "0"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "wait for navigation to start. Accepts time in milliseconds.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Prevent given text from being written to log output.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.hideText",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1040,
        "column": 0,
        "index": 41350
      },
      "end": {
        "line": 1059,
        "column": 3,
        "index": 42697
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1060,
          "column": 0,
          "index": 42698
        },
        "end": {
          "line": 1066,
          "column": 2,
          "index": 42960
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await write('admin')"
      },
      {
        "description": "await write('admin', into(textBox(\"Username\"),{force:true})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text to type into the element."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "into",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector of an element to write into."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "Element"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.delay",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Time to wait between key presses in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "0"
          },
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "wait for navigation to start. Accepts time in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.hideText",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Prevent given text from being written to log output."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          }
        ],
        "default": "{delay:0}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "write",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "write",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".write"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clears the value of given selector. If no selector is given clears the current active element."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await clear()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await clear(textBox({placeholder:'Email'}))",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await clear(textBox({ placeholder: 'Email' }), { waitForNavigation: true, force: true })",
        "lineNumber": 7
      },
      {
        "title": "param",
        "description": "A selector to search for element to clear. If there are multiple elements satisfying the selector, the first will be cleared.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "selector"
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "Click options.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after clear. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "wait for navigation to start. Accepts time in milliseconds.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1068,
        "column": 0,
        "index": 42962
      },
      "end": {
        "line": 1087,
        "column": 3,
        "index": 44272
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1088,
          "column": 0,
          "index": 44273
        },
        "end": {
          "line": 1098,
          "column": 2,
          "index": 44642
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await clear()"
      },
      {
        "description": "await clear(textBox({placeholder:'Email'}))"
      },
      {
        "description": "await clear(textBox({ placeholder: 'Email' }), { waitForNavigation: true, force: true })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to clear. If there are multiple elements satisfying the selector, the first will be cleared."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "selector"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Click options."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after clear. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "wait for navigation to start. Accepts time in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "clear",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clear",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clear"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Attaches a file to a file input element."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await attach('c:/abc.txt', to('Please select a file:'))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await attach('c:/abc.txt', 'Please select a file:')",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await attach('c:/abc.txt', 'Please select a file:',{force:true})",
        "lineNumber": 7
      },
      {
        "title": "param",
        "description": "or filepaths- The path or paths of the file to be attached.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        },
        "name": "filepath"
      },
      {
        "title": "param",
        "description": "The file input element to which to attach the file.",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "to"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      }
    ],
    "loc": {
      "start": {
        "line": 1100,
        "column": 0,
        "index": 44644
      },
      "end": {
        "line": 1113,
        "column": 3,
        "index": 45202
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1114,
          "column": 0,
          "index": 45203
        },
        "end": {
          "line": 1119,
          "column": 2,
          "index": 45420
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await attach('c:/abc.txt', to('Please select a file:'))"
      },
      {
        "description": "await attach('c:/abc.txt', 'Please select a file:')"
      },
      {
        "description": "await attach('c:/abc.txt', 'Please select a file:',{force:true})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "filepath",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "or filepaths- The path or paths of the file to be attached."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Array"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "to",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file input element to which to attach the file."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 1114,
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "attach",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "attach",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".attach"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Presses the given keys."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await press('Enter')",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await press('a')",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await press(['Shift', 'ArrowLeft', 'ArrowLeft'])",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "awaitpress('a', { waitForNavigation: false })",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": "Name of keys to press. See [USKeyboardLayout](https://github.com/getgauge/taiko/blob/master/lib/data/USKeyboardLayout.js) for a list of all key names.",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "keys"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "If specified, generates an input event with this text.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.text",
        "default": "\"\""
      },
      {
        "title": "param",
        "description": "Time to wait between keydown and keyup in milliseconds.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.delay",
        "default": "0"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "wait for navigation to start.",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 21,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1121,
        "column": 0,
        "index": 45422
      },
      "end": {
        "line": 1143,
        "column": 3,
        "index": 46743
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1144,
          "column": 0,
          "index": 46744
        },
        "end": {
          "line": 1148,
          "column": 2,
          "index": 46907
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await press('Enter')"
      },
      {
        "description": "await press('a')"
      },
      {
        "description": "await press(['Shift', 'ArrowLeft', 'ArrowLeft'])"
      },
      {
        "description": "awaitpress('a', { waitForNavigation: false })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "keys",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Name of keys to press. See "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://github.com/getgauge/taiko/blob/master/lib/data/USKeyboardLayout.js",
                  "children": [
                    {
                      "type": "text",
                      "value": "USKeyboardLayout"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " for a list of all key names."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.text",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "If specified, generates an input event with this text."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "\"\""
          },
          {
            "title": "param",
            "name": "options.delay",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Time to wait between keydown and keyup in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "0"
          },
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "wait for navigation to start."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "press",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "press",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".press"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Highlights the given element on the page by drawing a red rectangle around it. This is useful for debugging purposes."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight('Get Started')",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await highlight(link('Get Started'))",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "A selector of an element to highlight. If there are multiple elements satisfying the selector, the first will be highlighted.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1168,
        "column": 0,
        "index": 47435
      },
      "end": {
        "line": 1180,
        "column": 3,
        "index": 47921
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1181,
          "column": 0,
          "index": 47922
        },
        "end": {
          "line": 1181,
          "column": 37,
          "index": 47959
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight('Get Started')"
      },
      {
        "description": "await highlight(link('Get Started'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector of an element to highlight. If there are multiple elements satisfying the selector, the first will be highlighted."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "highlight",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "highlight",
        "scope": "static"
      }
    ],
    "namespace": ".highlight"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clear all highlights marked using "
            },
            {
              "type": "link",
              "url": "highlight",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "highlight"
                }
              ]
            },
            {
              "type": "text",
              "value": " on the current page."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await clearHighlights();",
        "lineNumber": 3
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1194,
        "column": 0,
        "index": 48293
      },
      "end": {
        "line": 1201,
        "column": 3,
        "index": 48450
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1203,
          "column": 0,
          "index": 48452
        },
        "end": {
          "line": 1208,
          "column": 2,
          "index": 48652
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await clearHighlights();"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "clearHighlights",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clearHighlights",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clearHighlights"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Performs the given mouse action on the given coordinates. This is useful in performing actions on canvas."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await mouseAction('press', {x:0,y:0})",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await mouseAction('move', {x:9,y:9})",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await mouseAction('release', {x:9,y:9})",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await mouseAction($(\"#elementID\"),'press', {x:0,y:0})",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "await mouseAction($(\".elementClass\"),'move', {x:9,y:9})",
        "lineNumber": 11
      },
      {
        "title": "example",
        "description": "await mouseAction($(\"testxpath\"),'release', {x:9,y:9})",
        "lineNumber": 13
      },
      {
        "title": "example",
        "description": "await mouseAction('release', {x:9, y:9}, {navigationTimeout: 30000})",
        "lineNumber": 15
      },
      {
        "title": "param",
        "description": "Action to be performed on the canvas",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "action"
      },
      {
        "title": "param",
        "description": "Coordinates of a point on canvas to perform the action.",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "coordinates"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts time in milliseconds.",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      }
    ],
    "loc": {
      "start": {
        "line": 1210,
        "column": 0,
        "index": 48654
      },
      "end": {
        "line": 1236,
        "column": 3,
        "index": 50197
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1237,
          "column": 0,
          "index": 50198
        },
        "end": {
          "line": 1237,
          "column": 41,
          "index": 50239
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await mouseAction('press', {x:0,y:0})"
      },
      {
        "description": "await mouseAction('move', {x:9,y:9})"
      },
      {
        "description": "await mouseAction('release', {x:9,y:9})"
      },
      {
        "description": "await mouseAction($(\"#elementID\"),'press', {x:0,y:0})"
      },
      {
        "description": "await mouseAction($(\".elementClass\"),'move', {x:9,y:9})"
      },
      {
        "description": "await mouseAction($(\"testxpath\"),'release', {x:9,y:9})"
      },
      {
        "description": "await mouseAction('release', {x:9, y:9}, {navigationTimeout: 30000})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "action",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to be performed on the canvas"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "coordinates",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinates of a point on canvas to perform the action."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 21,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts time in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 25,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ]
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "mouseAction",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "mouseAction",
        "scope": "static"
      }
    ],
    "namespace": ".mouseAction"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls the page to the given element.\nThe alignment parameters can be overridden, see below.\nA reference of the possible values for the alignment parameters is available at "
            },
            {
              "type": "link",
              "title": null,
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView",
              "children": [
                {
                  "type": "text",
                  "value": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView"
                }
              ]
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollTo('Get Started')",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await scrollTo(link('Get Started'))",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await scrollTo('Get Started', { blockAlignment: 'center', inlineAlignment: 'center' })",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": "A selector of an element to scroll to.",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Defines vertical alignment. One of `start`, `center`, `end` or `nearest`.",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.blockAlignment",
        "default": "'nearest'"
      },
      {
        "title": "param",
        "description": "Defines horizontal alignment. One of `start`, `center`, `end` or `nearest`.",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.inlineAlignment",
        "default": "'nearest'"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 21,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1246,
        "column": 0,
        "index": 50501
      },
      "end": {
        "line": 1268,
        "column": 3,
        "index": 52054
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1269,
          "column": 0,
          "index": 52055
        },
        "end": {
          "line": 1280,
          "column": 2,
          "index": 52488
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollTo('Get Started')"
      },
      {
        "description": "await scrollTo(link('Get Started'))"
      },
      {
        "description": "await scrollTo('Get Started', { blockAlignment: 'center', inlineAlignment: 'center' })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector of an element to scroll to."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Time to wait for navigation to start. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.blockAlignment",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines vertical alignment. One of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "start"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "center"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "end"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "nearest"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'nearest'"
          },
          {
            "title": "param",
            "name": "options.inlineAlignment",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines horizontal alignment. One of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "start"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "center"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "end"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "nearest"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'nearest'"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollTo",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollTo",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollTo"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls the page/element to the right."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollRight()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await scrollRight(1000)",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await scrollRight('Element containing text')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await scrollRight('Element containing text', 1000)",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "selector"
              },
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "e",
        "default": "'Window'"
      },
      {
        "title": "param",
        "description": "Accept px in pixels",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "px"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1282,
        "column": 0,
        "index": 52490
      },
      "end": {
        "line": 1298,
        "column": 3,
        "index": 52868
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1299,
          "column": 0,
          "index": 52869
        },
        "end": {
          "line": 1317,
          "column": 2,
          "index": 53365
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollRight()"
      },
      {
        "description": "await scrollRight(1000)"
      },
      {
        "description": "await scrollRight('Element containing text')"
      },
      {
        "description": "await scrollRight('Element containing text', 1000)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "e",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "default": "'Window'"
      },
      {
        "title": "param",
        "name": "px",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accept px in pixels"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "100"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollRight",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollRight",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollRight"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls the page/element to the left."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollLeft()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await scrollLeft(1000)",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await scrollLeft('Element containing text')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await scrollLeft('Element containing text', 1000)",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "selector"
              },
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "e",
        "default": "'Window'"
      },
      {
        "title": "param",
        "description": "Accept px in pixels",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "px"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1319,
        "column": 0,
        "index": 53367
      },
      "end": {
        "line": 1335,
        "column": 3,
        "index": 53740
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1336,
          "column": 0,
          "index": 53741
        },
        "end": {
          "line": 1354,
          "column": 2,
          "index": 54240
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollLeft()"
      },
      {
        "description": "await scrollLeft(1000)"
      },
      {
        "description": "await scrollLeft('Element containing text')"
      },
      {
        "description": "await scrollLeft('Element containing text', 1000)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "e",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "default": "'Window'"
      },
      {
        "title": "param",
        "name": "px",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accept px in pixels"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "100"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollLeft",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollLeft",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollLeft"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls up the page/element."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollUp()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await scrollUp(1000)",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await scrollUp('Element containing text')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await scrollUp('Element containing text', 1000)",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "selector"
              },
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "e",
        "default": "'Window'"
      },
      {
        "title": "param",
        "description": "Accept px in pixels",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "px"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1356,
        "column": 0,
        "index": 54242
      },
      "end": {
        "line": 1372,
        "column": 3,
        "index": 54598
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1373,
          "column": 0,
          "index": 54599
        },
        "end": {
          "line": 1391,
          "column": 2,
          "index": 55093
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollUp()"
      },
      {
        "description": "await scrollUp(1000)"
      },
      {
        "description": "await scrollUp('Element containing text')"
      },
      {
        "description": "await scrollUp('Element containing text', 1000)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "e",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "default": "'Window'"
      },
      {
        "title": "param",
        "name": "px",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accept px in pixels"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "100"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollUp",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollUp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollUp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls down the page/element."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollDown()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await scrollDown(1000)",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await scrollDown('Element containing text')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await scrollDown('Element containing text', 1000)",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "selector"
              },
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "e",
        "default": "'Window'"
      },
      {
        "title": "param",
        "description": "Accept px in pixels",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "px"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1393,
        "column": 0,
        "index": 55095
      },
      "end": {
        "line": 1409,
        "column": 3,
        "index": 55461
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1410,
          "column": 0,
          "index": 55462
        },
        "end": {
          "line": 1428,
          "column": 2,
          "index": 55955
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollDown()"
      },
      {
        "description": "await scrollDown(1000)"
      },
      {
        "description": "await scrollDown('Element containing text')"
      },
      {
        "description": "await scrollDown('Element containing text', 1000)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "e",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "default": "'Window'"
      },
      {
        "title": "param",
        "name": "px",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accept px in pixels"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "100"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollDown",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollDown",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollDown"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Captures a screenshot of the page. Appends timeStamp to filename if no filepath given."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await screenshot()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await screenshot({path : 'screenshot.png'})",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await screenshot({fullPage:true})",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await screenshot(text('Images', toRightOf('gmail')))",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "toggles full page screenshot",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.fullpage",
        "default": "false"
      },
      {
        "title": "param",
        "description": "path of the output file",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.path",
        "default": "'Screenshot-${Date.now()}.png'"
      },
      {
        "title": "param",
        "description": "encoding for the image",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.encoding",
        "default": "'base64'"
      },
      {
        "title": "returns",
        "description": "Promise which resolves to buffer with captured screenshot if `{encoding:'base64'}` given, otherwise it resolves to undefined.",
        "lineNumber": 18,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Buffer"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1430,
        "column": 0,
        "index": 55957
      },
      "end": {
        "line": 1449,
        "column": 3,
        "index": 56734
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1450,
          "column": 0,
          "index": 56735
        },
        "end": {
          "line": 1463,
          "column": 2,
          "index": 57347
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await screenshot()"
      },
      {
        "description": "await screenshot({path : 'screenshot.png'})"
      },
      {
        "description": "await screenshot({fullPage:true})"
      },
      {
        "description": "await screenshot(text('Images', toRightOf('gmail')))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.fullpage",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "toggles full page screenshot"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.path",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "path of the output file"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'Screenshot-${Date.now()}.png'"
          },
          {
            "title": "param",
            "name": "options.encoding",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "encoding for the image"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'base64'"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Promise which resolves to buffer with captured screenshot if "
                },
                {
                  "type": "inlineCode",
                  "value": "{encoding:'base64'}"
                },
                {
                  "type": "text",
                  "value": " given, otherwise it resolves to undefined."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Buffer"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "screenshot",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "screenshot",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".screenshot"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then taps on the element. If there's no element matching selector, the method throws an error."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await tap('Gmail')",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await tap(link('Gmail'))",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "tap(link('Gmail'), { waitForNavigation: true, waitForEvents: ['firstMeaningfulPaint'],  force: true });",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "tap(link('Gmail'), {}, below('title'))",
        "lineNumber": 8
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "selector"
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "- Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Set to true to perform action on hidden/disabled elements.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.force",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 16,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1465,
        "column": 0,
        "index": 57349
      },
      "end": {
        "line": 1484,
        "column": 3,
        "index": 58480
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1485,
          "column": 0,
          "index": 58481
        },
        "end": {
          "line": 1491,
          "column": 2,
          "index": 58731
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await tap('Gmail')"
      },
      {
        "description": "await tap(link('Gmail'))"
      },
      {
        "description": "tap(link('Gmail'), { waitForNavigation: true, waitForEvents: ['firstMeaningfulPaint'],  force: true });"
      },
      {
        "description": "tap(link('Gmail'), {}, below('title'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "selector"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "list",
                  "ordered": false,
                  "start": null,
                  "spread": false,
                  "children": [
                    {
                      "type": "listItem",
                      "spread": false,
                      "checked": null,
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass "
                            },
                            {
                              "type": "inlineCode",
                              "value": "{ navigationTimeout: 10000 }"
                            },
                            {
                              "type": "text",
                              "value": " in "
                            },
                            {
                              "type": "inlineCode",
                              "value": "options"
                            },
                            {
                              "type": "text",
                              "value": " parameter."
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.force",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to true to perform action on hidden/disabled elements."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          }
        ],
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "tap",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "tap",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".tap"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify elements on the web page via XPath or CSS selector and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight($(`//*[text()='text']`))",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await $(`//*[text()='text']`).exists()",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "$(`#id`,near('username'),below('login'))",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "$(() => {return document.querySelector('#foo');})",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "$((selector) => document.querySelector(selector), { args: '#foo' })",
        "lineNumber": 10
      },
      {
        "title": "example",
        "description": "$((selector) => document.getElementById(selector), { args: 'foo' })",
        "lineNumber": 12
      },
      {
        "title": "param",
        "description": "XPath or CSS selector or Function.",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 17,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "DollarWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1493,
        "column": 0,
        "index": 58733
      },
      "end": {
        "line": 1512,
        "column": 3,
        "index": 59439
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1513,
          "column": 0,
          "index": 59440
        },
        "end": {
          "line": 1517,
          "column": 2,
          "index": 59651
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight($(`//*[text()='text']`))"
      },
      {
        "description": "await $(`//*[text()='text']`).exists()"
      },
      {
        "description": "$(`#id`,near('username'),below('login'))"
      },
      {
        "description": "$(() => {return document.querySelector('#foo');})"
      },
      {
        "description": "$((selector) => document.querySelector(selector), { args: '#foo' })"
      },
      {
        "description": "$((selector) => document.getElementById(selector), { args: 'foo' })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 1513
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "XPath or CSS selector or Function."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "DollarWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "$",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "$",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".$"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify an image on a web page. This is done via the image's alt text or attribute and value pairs\nand proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(image('alt'))",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await image('alt').exists()",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "await image({id:'imageId'}).exists()",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "await image({id:'imageId'},below('text')).exists()",
        "lineNumber": 10
      },
      {
        "title": "example",
        "description": "await image(below('text')).exists()",
        "lineNumber": 12
      },
      {
        "title": "param",
        "description": "The image's alt text.",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "alt"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 18,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "ImageWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1519,
        "column": 0,
        "index": 59653
      },
      "end": {
        "line": 1539,
        "column": 3,
        "index": 60347
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1540,
          "column": 0,
          "index": 60348
        },
        "end": {
          "line": 1544,
          "column": 2,
          "index": 60560
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(image('alt'))"
      },
      {
        "description": "await image('alt').exists()"
      },
      {
        "description": "await image({id:'imageId'}).exists()"
      },
      {
        "description": "await image({id:'imageId'},below('text')).exists()"
      },
      {
        "description": "await image(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "alt",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The image's alt text."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ImageWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "image",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "image",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".image"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a link on a web page with text or attribute and value pairs and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link('Get Started'))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await link('Get Started').exists()",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await link({id:'linkId'}).exists()",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await link({id:'linkId'},below('text')).exists()",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "await link(below('text')).exists()",
        "lineNumber": 11
      },
      {
        "title": "param",
        "description": "The link text.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 17,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "LinkWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1546,
        "column": 0,
        "index": 60562
      },
      "end": {
        "line": 1565,
        "column": 3,
        "index": 61224
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1566,
          "column": 0,
          "index": 61225
        },
        "end": {
          "line": 1570,
          "column": 2,
          "index": 61433
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link('Get Started'))"
      },
      {
        "description": "await link('Get Started').exists()"
      },
      {
        "description": "await link({id:'linkId'}).exists()"
      },
      {
        "description": "await link({id:'linkId'},below('text')).exists()"
      },
      {
        "description": "await link(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "text",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The link text."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "LinkWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "link",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "link",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".link"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a list item (HTML "
            },
            {
              "type": "inlineCode",
              "value": "<li>"
            },
            {
              "type": "text",
              "value": " element) on a web page with label or attribute and value pairs and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight(listItem('Get Started'))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await listItem('Get Started').exists()",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await listItem({id:'listId'}).exists()",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await listItem({id:'listItemId'},below('text')).exists()",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "await listItem(below('text')).exists()",
        "lineNumber": 11
      },
      {
        "title": "param",
        "description": "The label of the list item.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 17,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "ListItemWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1572,
        "column": 0,
        "index": 61435
      },
      "end": {
        "line": 1591,
        "column": 3,
        "index": 62171
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1592,
          "column": 0,
          "index": 62172
        },
        "end": {
          "line": 1596,
          "column": 2,
          "index": 62396
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight(listItem('Get Started'))"
      },
      {
        "description": "await listItem('Get Started').exists()"
      },
      {
        "description": "await listItem({id:'listId'}).exists()"
      },
      {
        "description": "await listItem({id:'listItemId'},below('text')).exists()"
      },
      {
        "description": "await listItem(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label of the list item."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ListItemWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "listItem",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "listItem",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".listItem"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a button on a web page with label or attribute and value pairs and proximity selectors.\nTags button and input with type submit, reset and button are identified using this selector"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight(button('Get Started'))",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await button('Get Started').exists()",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "await button({id:'buttonId'}).exists()",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "await button({id:'buttonId'},below('text')).exists()",
        "lineNumber": 10
      },
      {
        "title": "example",
        "description": "await button(below('text')).exists()",
        "lineNumber": 12
      },
      {
        "title": "param",
        "description": "The button label.",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 18,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "ButtonWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1598,
        "column": 0,
        "index": 62398
      },
      "end": {
        "line": 1618,
        "column": 3,
        "index": 63182
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1619,
          "column": 0,
          "index": 63183
        },
        "end": {
          "line": 1623,
          "column": 2,
          "index": 63399
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight(button('Get Started'))"
      },
      {
        "description": "await button('Get Started').exists()"
      },
      {
        "description": "await button({id:'buttonId'}).exists()"
      },
      {
        "description": "await button({id:'buttonId'},below('text')).exists()"
      },
      {
        "description": "await button(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The button label."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ButtonWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "button",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "button",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".button"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a file input field on a web page either with label or with attribute and value pairs and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await attach('file.txt', to(fileField('Please select a file:')))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await fileField('Please select a file:').exists()",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await fileField({'id':'file'}).exists()",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await fileField({id:'fileFieldId'},below('text')).exists()",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "await fileField(below('text')).exists()",
        "lineNumber": 11
      },
      {
        "title": "param",
        "description": "The label (human-visible name) of the file input field.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 17,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "FileFieldWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1625,
        "column": 0,
        "index": 63401
      },
      "end": {
        "line": 1644,
        "column": 3,
        "index": 64202
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1645,
          "column": 0,
          "index": 64203
        },
        "end": {
          "line": 1645,
          "column": 37,
          "index": 64240
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await attach('file.txt', to(fileField('Please select a file:')))"
      },
      {
        "description": "await fileField('Please select a file:').exists()"
      },
      {
        "description": "await fileField({'id':'file'}).exists()"
      },
      {
        "description": "await fileField({id:'fileFieldId'},below('text')).exists()"
      },
      {
        "description": "await fileField(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label (human-visible name) of the file input field."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "FileFieldWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "fileField",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "fileField",
        "scope": "static"
      }
    ],
    "namespace": ".fileField"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify time based input types [ date, datetime-local, month, time, week ] on a web page either with label\nor with attribute and value pairs and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await write('31082020', into(timeField('Birthday:')))",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await timeField('Birthday:').select(new Date('2020-09-20'))",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "await timeField('Birthday:').exists()",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "await timeField({'id':'Birthday'}).exists()",
        "lineNumber": 10
      },
      {
        "title": "example",
        "description": "await timeField({id:'Birthday'},below('text')).exists()",
        "lineNumber": 12
      },
      {
        "title": "example",
        "description": "await timeField(below('text')).exists()",
        "lineNumber": 14
      },
      {
        "title": "param",
        "description": "The label (human-visible name) of the file input field.",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 20,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "TimeFieldWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1653,
        "column": 0,
        "index": 64459
      },
      "end": {
        "line": 1675,
        "column": 3,
        "index": 65364
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1676,
          "column": 0,
          "index": 65365
        },
        "end": {
          "line": 1676,
          "column": 37,
          "index": 65402
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await write('31082020', into(timeField('Birthday:')))"
      },
      {
        "description": "await timeField('Birthday:').select(new Date('2020-09-20'))"
      },
      {
        "description": "await timeField('Birthday:').exists()"
      },
      {
        "description": "await timeField({'id':'Birthday'}).exists()"
      },
      {
        "description": "await timeField({id:'Birthday'},below('text')).exists()"
      },
      {
        "description": "await timeField(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label (human-visible name) of the file input field."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "TimeFieldWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "timeField",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "timeField",
        "scope": "static"
      }
    ],
    "namespace": ".timeField"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " let you specify a value which must be no less than a given value, and no more than another given value,attribute and value pairs and proximity selectors.\nThis is typically represented using a slider or dial control rather than a text entry box like the number input type."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await range({ id: 'range-1' }).select(10.81);",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await range({ id: 'range-1' }).select('10');",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "await range({ id: 'range-1' }, below('head')).select(10);",
        "lineNumber": 8
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "RangeWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1684,
        "column": 0,
        "index": 65621
      },
      "end": {
        "line": 1699,
        "column": 3,
        "index": 66347
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1700,
          "column": 0,
          "index": 66348
        },
        "end": {
          "line": 1700,
          "column": 29,
          "index": 66377
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await range({ id: 'range-1' }).select(10.81);"
      },
      {
        "description": "await range({ id: 'range-1' }).select('10');"
      },
      {
        "description": "await range({ id: 'range-1' }, below('head')).select(10);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RangeWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "range",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "range",
        "scope": "static"
      }
    ],
    "namespace": ".range"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you set color values on color picker on web page with attribute and value pairs and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await color({'id':'colorId'}).exists()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await color({id:'colorId'},below('text')).exists()",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await color(below('text')).exists()",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await color(below('text')).select('#f236cf')",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "await color({'id':'colorId'}).select('#f236cf')",
        "lineNumber": 11
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 16,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "ColorWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1708,
        "column": 0,
        "index": 66580
      },
      "end": {
        "line": 1726,
        "column": 3,
        "index": 67241
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1728,
          "column": 0,
          "index": 67243
        },
        "end": {
          "line": 1728,
          "column": 29,
          "index": 67272
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await color({'id':'colorId'}).exists()"
      },
      {
        "description": "await color({id:'colorId'},below('text')).exists()"
      },
      {
        "description": "await color(below('text')).exists()"
      },
      {
        "description": "await color(below('text')).select('#f236cf')"
      },
      {
        "description": "await color({'id':'colorId'}).select('#f236cf')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ColorWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "color",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "color",
        "scope": "static"
      }
    ],
    "namespace": ".color"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a table cell\non a web page with row and column and row values as options and locating table using proximity selectors,\nor table labels."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "tableCell({row:1, col:1}, \"Table Caption\")",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "tableCell({id:'myColumn'}).text()",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "tableCell({row:1,col:3}).text()",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "highlight(tableCell({row:2, col:3}, \"Table Caption\"))",
        "lineNumber": 11
      },
      {
        "title": "example",
        "description": "highlight(text(\"Table Cell 2\",above(tableCell({row:2, col:2}, \"Table Caption\"))))",
        "lineNumber": 13
      },
      {
        "title": "example",
        "description": "highlight(text(\"Table Cell 1\",near(tableCell({row:1, col:1}, \"Table Caption\"))))",
        "lineNumber": 15
      },
      {
        "title": "example",
        "description": "click(link(above(tableCell({row:4,col:1},\"Table Caption\"))))",
        "lineNumber": 17
      },
      {
        "title": "example",
        "description": "highlight(link(above(tableCell({row:4,col:1},above(\"Code\")))))",
        "lineNumber": 19
      },
      {
        "title": "param",
        "description": "Pair of row and column like {row:1, col:3}",
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "The Table Caption or any Table Header or Table ID.",
        "lineNumber": 24,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 25,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": "*",
        "lineNumber": 26,
        "type": {
          "type": "NameExpression",
          "name": "TableCellWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1740,
        "column": 0,
        "index": 67603
      },
      "end": {
        "line": 1767,
        "column": 4,
        "index": 68717
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1768,
          "column": 0,
          "index": 68718
        },
        "end": {
          "line": 1768,
          "column": 37,
          "index": 68755
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "tableCell({row:1, col:1}, \"Table Caption\")"
      },
      {
        "description": "tableCell({id:'myColumn'}).text()"
      },
      {
        "description": "tableCell({row:1,col:3}).text()"
      },
      {
        "description": "highlight(tableCell({row:2, col:3}, \"Table Caption\"))"
      },
      {
        "description": "highlight(text(\"Table Cell 2\",above(tableCell({row:2, col:2}, \"Table Caption\"))))"
      },
      {
        "description": "highlight(text(\"Table Cell 1\",near(tableCell({row:1, col:1}, \"Table Caption\"))))"
      },
      {
        "description": "click(link(above(tableCell({row:4,col:1},\"Table Caption\"))))"
      },
      {
        "description": "highlight(link(above(tableCell({row:4,col:1},above(\"Code\")))))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 22,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pair of row and column like {row:1, col:3}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 24,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Table Caption or any Table Header or Table ID."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "list",
              "ordered": false,
              "start": null,
              "spread": false,
              "children": [
                {
                  "type": "listItem",
                  "spread": false,
                  "checked": null,
                  "children": []
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "TableCellWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "tableCell",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "tableCell",
        "scope": "static"
      }
    ],
    "namespace": ".tableCell"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a text field(input (with type text, password, url, search, number, email, tel), textarea and contenteditable fields)\non a web page either with label or with attribute and value pairs and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await focus(textBox('Username:'))",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await textBox('Username:').exists()",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "await textBox({id:'textBoxId'},below('text')).exists()",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "await textBox(below('text')).exists()",
        "lineNumber": 10
      },
      {
        "title": "param",
        "description": "Either the label (human-visible name) of the text field or pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "labelOrAttrValuePairs"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 15,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "TextBoxWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1795,
        "column": 0,
        "index": 69506
      },
      "end": {
        "line": 1812,
        "column": 3,
        "index": 70283
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1813,
          "column": 0,
          "index": 70284
        },
        "end": {
          "line": 1813,
          "column": 33,
          "index": 70317
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await focus(textBox('Username:'))"
      },
      {
        "description": "await textBox('Username:').exists()"
      },
      {
        "description": "await textBox({id:'textBoxId'},below('text')).exists()"
      },
      {
        "description": "await textBox(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "labelOrAttrValuePairs",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either the label (human-visible name) of the text field or pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "TextBoxWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "textBox",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textBox",
        "scope": "static"
      }
    ],
    "namespace": ".textBox"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a dropDown on a web page either with label or with attribute and value pairs and proximity selectors.\nAny value can be selected using value or text or index of the options."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await dropDown('Vehicle:').select('Car')",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await dropDown('Vehicle:').select({index:'0'}) - index starts from 0",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "await dropDown('Vehicle:').value()",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "await dropDown('Vehicle:').options() - Returns all available options from the drop down",
        "lineNumber": 10
      },
      {
        "title": "example",
        "description": "await dropDown('Vehicle:').exists()",
        "lineNumber": 12
      },
      {
        "title": "example",
        "description": "await dropDown({id:'dropDownId'},below('text')).exists()",
        "lineNumber": 14
      },
      {
        "title": "example",
        "description": "await dropDown(below('text')).exists()",
        "lineNumber": 16
      },
      {
        "title": "example",
        "description": "await dropDown('Vehicle:').select(/Car/) // Only matches drop down text and not the value",
        "lineNumber": 18
      },
      {
        "title": "param",
        "description": "Either the label (human-visible name) of the text field or pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "labelOrAttrValuePairs"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 23,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 24,
        "type": {
          "type": "NameExpression",
          "name": "DropDownWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1821,
        "column": 0,
        "index": 70537
      },
      "end": {
        "line": 1846,
        "column": 3,
        "index": 71632
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1847,
          "column": 0,
          "index": 71633
        },
        "end": {
          "line": 1847,
          "column": 35,
          "index": 71668
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await dropDown('Vehicle:').select('Car')"
      },
      {
        "description": "await dropDown('Vehicle:').select({index:'0'}) - index starts from 0"
      },
      {
        "description": "await dropDown('Vehicle:').value()"
      },
      {
        "description": "await dropDown('Vehicle:').options() - Returns all available options from the drop down"
      },
      {
        "description": "await dropDown('Vehicle:').exists()"
      },
      {
        "description": "await dropDown({id:'dropDownId'},below('text')).exists()"
      },
      {
        "description": "await dropDown(below('text')).exists()"
      },
      {
        "description": "await dropDown('Vehicle:').select(/Car/) // Only matches drop down text and not the value"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "labelOrAttrValuePairs",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either the label (human-visible name) of the text field or pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "DropDownWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "dropDown",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dropDown",
        "scope": "static"
      }
    ],
    "namespace": ".dropDown"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a checkbox on a web page either with label or with attribute and value pairs and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await checkBox('Vehicle').uncheck()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await checkBox('Vehicle').exists()",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await checkBox({id:'checkBoxId'},below('text')).exists()",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await checkBox(below('text')).exists()",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": "Either the label (human-visible name) of the text field or pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "labelOrAttrValuePairs"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 14,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "CheckBoxWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1855,
        "column": 0,
        "index": 71892
      },
      "end": {
        "line": 1871,
        "column": 3,
        "index": 72563
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1872,
          "column": 0,
          "index": 72564
        },
        "end": {
          "line": 1876,
          "column": 2,
          "index": 72797
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await checkBox('Vehicle').uncheck()"
      },
      {
        "description": "await checkBox('Vehicle').exists()"
      },
      {
        "description": "await checkBox({id:'checkBoxId'},below('text')).exists()"
      },
      {
        "description": "await checkBox(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "labelOrAttrValuePairs",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either the label (human-visible name) of the text field or pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "CheckBoxWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "checkBox",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "checkBox",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".checkBox"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify a radio button on a web page either with label or with attribute and value pairs and proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await radioButton('Vehicle').exists()",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await radioButton({id:'radioButtonId'},below('text')).exists()",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await radioButton(below('text')).exists()",
        "lineNumber": 7
      },
      {
        "title": "param",
        "description": "Either the label (human-visible name) of the text field or pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "labelOrAttrValuePairs"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "RadioButtonWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1878,
        "column": 0,
        "index": 72799
      },
      "end": {
        "line": 1892,
        "column": 3,
        "index": 73418
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1893,
          "column": 0,
          "index": 73419
        },
        "end": {
          "line": 1897,
          "column": 2,
          "index": 73664
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await radioButton('Vehicle').exists()"
      },
      {
        "description": "await radioButton({id:'radioButtonId'},below('text')).exists()"
      },
      {
        "description": "await radioButton(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "labelOrAttrValuePairs",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either the label (human-visible name) of the text field or pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 12,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RadioButtonWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "radioButton",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "radioButton",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".radioButton"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ]
            },
            {
              "type": "text",
              "value": " lets you identify an element with text. Looks for exact match if not found does contains, accepts proximity selectors."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight(text('Vehicle'))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await text('Vehicle').exists()",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await text('Vehicle', below('text')).exists()",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "await text('Vehicle', { exactMatch: true }, below('text')).exists()",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "await text('/Vehicle/').exists() //regex as string",
        "lineNumber": 11
      },
      {
        "title": "example",
        "description": "await text(/Vehicle/).exists()",
        "lineNumber": 13
      },
      {
        "title": "example",
        "description": "await text(new RegExp('Vehicle')).exists()",
        "lineNumber": 15
      },
      {
        "title": "param",
        "description": "Text/regex to match.",
        "lineNumber": 18,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "RegExp"
            }
          ]
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "_options"
      },
      {
        "title": "param",
        "description": "Option to look for exact match.",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "_options.exactMatch",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 21,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "TextWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1899,
        "column": 0,
        "index": 73666
      },
      "end": {
        "line": 1922,
        "column": 3,
        "index": 74480
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1923,
          "column": 0,
          "index": 74481
        },
        "end": {
          "line": 1923,
          "column": 27,
          "index": 74508
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight(text('Vehicle'))"
      },
      {
        "description": "await text('Vehicle').exists()"
      },
      {
        "description": "await text('Vehicle', below('text')).exists()"
      },
      {
        "description": "await text('Vehicle', { exactMatch: true }, below('text')).exists()"
      },
      {
        "description": "await text('/Vehicle/').exists() //regex as string"
      },
      {
        "description": "await text(/Vehicle/).exists()"
      },
      {
        "description": "await text(new RegExp('Vehicle')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text/regex to match."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "RegExp"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "_options.exactMatch",
            "lineNumber": 20,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to look for exact match."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ]
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "TextWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "text",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "text",
        "scope": "static"
      }
    ],
    "namespace": ".text"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this "
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ]
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", toLeftOf(\"name\"))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await write(textBox(\"first name\", toLeftOf(\"last name\"))",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1931,
        "column": 0,
        "index": 74687
      },
      "end": {
        "line": 1941,
        "column": 3,
        "index": 74998
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1943,
          "column": 0,
          "index": 75000
        },
        "end": {
          "line": 1953,
          "column": 2,
          "index": 75368
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", toLeftOf(\"name\"))"
      },
      {
        "description": "await write(textBox(\"first name\", toLeftOf(\"last name\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "toLeftOf",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "toLeftOf",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".toLeftOf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this "
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ]
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", toRightOf(\"name\"))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await write(textBox(\"last name\", toRightOf(\"first name\"))",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1955,
        "column": 0,
        "index": 75370
      },
      "end": {
        "line": 1965,
        "column": 3,
        "index": 75683
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1967,
          "column": 0,
          "index": 75685
        },
        "end": {
          "line": 1980,
          "column": 2,
          "index": 76085
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", toRightOf(\"name\"))"
      },
      {
        "description": "await write(textBox(\"last name\", toRightOf(\"first name\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "toRightOf",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "toRightOf",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".toRightOf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this "
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ]
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", above(\"name\"))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await write(textBox(\"name\", above(\"email\"))",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1982,
        "column": 0,
        "index": 76087
      },
      "end": {
        "line": 1992,
        "column": 3,
        "index": 76382
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1994,
          "column": 0,
          "index": 76384
        },
        "end": {
          "line": 2005,
          "column": 2,
          "index": 76760
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", above(\"name\"))"
      },
      {
        "description": "await write(textBox(\"name\", above(\"email\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "above",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "above",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".above"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this "
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ]
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", below(\"name\"))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await write(textBox(\"email\", below(\"name\"))",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2007,
        "column": 0,
        "index": 76762
      },
      "end": {
        "line": 2017,
        "column": 3,
        "index": 77057
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2019,
          "column": 0,
          "index": 77059
        },
        "end": {
          "line": 2030,
          "column": 2,
          "index": 77435
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", below(\"name\"))"
      },
      {
        "description": "await write(textBox(\"email\", below(\"name\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "below",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "below",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".below"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this "
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ]
            },
            {
              "type": "text",
              "value": ".\nAn element is considered nearer to a reference element,\nonly if the element offset is lesser than the 30px of the reference element in any direction.\nDefault offset is 30px to override set options = {offset:50}"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", near(\"name\"))",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "await click(link(\"Block\", near(\"name\", {offset: 50}))",
        "lineNumber": 8
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2032,
        "column": 0,
        "index": 77437
      },
      "end": {
        "line": 2046,
        "column": 3,
        "index": 77964
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2047,
          "column": 0,
          "index": 77965
        },
        "end": {
          "line": 2066,
          "column": 2,
          "index": 78653
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", near(\"name\"))"
      },
      {
        "description": "await click(link(\"Block\", near(\"name\", {offset: 50}))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 2047,
        "default": "{offset:30}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "near",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "near",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".near"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this "
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ]
            },
            {
              "type": "text",
              "value": ".\nAn element is considered within a reference element,\nonly if the element's bounding box is in range of reference element."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", within(\"name\"))",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2068,
        "column": 0,
        "index": 78655
      },
      "end": {
        "line": 2079,
        "column": 3,
        "index": 79023
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2080,
          "column": 0,
          "index": 79024
        },
        "end": {
          "line": 2100,
          "column": 2,
          "index": 79645
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", within(\"name\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "within",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "within",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".within"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept or dismiss a "
            },
            {
              "type": "inlineCode",
              "value": "alert"
            },
            {
              "type": "text",
              "value": " matching a text."
            },
            {
              "type": "html",
              "value": "<br>"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "alert('Are you sure', async () => await accept())\n\nalert('Are you sure', async () => await dismiss())\n\n// If alert message is unknown, A RegExp which matches\n// the text can be used\n\nalert(/^Close.*$/, async () => await accept())\n\n// If alert message is completely unknown, A callback can\n// be passed directly, it will get the message, url etc\n// as arguments which can be used to make a decision.\n\nalert(async ({message}) => {\n  if(message === \"Are you sure?\") {\n    await accept();\n   }\n})\n\n\n// Note: Taiko's `alert` listener has to be setup before the alert\n// popup displays on the page. For example, if clicking on a button\n// shows the confirm popup, the Taiko script is\n\nalert('Message', async () => await accept())\nawait click('Show Alert')",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Identify prompt based on this message, regex or callback.",
        "lineNumber": 31,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "RegExp"
            },
            {
              "type": "NameExpression",
              "name": "function"
            }
          ]
        },
        "name": "messageOrCallback"
      },
      {
        "title": "param",
        "description": "Action to perform. accept/dismiss.",
        "lineNumber": 32,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 2102,
        "column": 0,
        "index": 79647
      },
      "end": {
        "line": 2135,
        "column": 3,
        "index": 80729
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2136,
          "column": 0,
          "index": 80730
        },
        "end": {
          "line": 2136,
          "column": 81,
          "index": 80811
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "alert('Are you sure', async () => await accept())\n\nalert('Are you sure', async () => await dismiss())\n\n// If alert message is unknown, A RegExp which matches\n// the text can be used\n\nalert(/^Close.*$/, async () => await accept())\n\n// If alert message is completely unknown, A callback can\n// be passed directly, it will get the message, url etc\n// as arguments which can be used to make a decision.\n\nalert(async ({message}) => {\n  if(message === \"Are you sure?\") {\n    await accept();\n   }\n})\n\n\n// Note: Taiko's `alert` listener has to be setup before the alert\n// popup displays on the page. For example, if clicking on a button\n// shows the confirm popup, the Taiko script is\n\nalert('Message', async () => await accept())\nawait click('Show Alert')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "message",
        "lineNumber": 2136
      },
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to perform. accept/dismiss."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      },
      {
        "title": "param",
        "name": "messageOrCallback",
        "lineNumber": 31,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Identify prompt based on this message, regex or callback."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "RegExp"
            },
            {
              "type": "NameExpression",
              "name": "function"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "alert",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "alert",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".alert"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept or dismiss a "
            },
            {
              "type": "inlineCode",
              "value": "prompt"
            },
            {
              "type": "text",
              "value": " matching a text."
            },
            {
              "type": "html",
              "value": "<br>"
            },
            {
              "type": "text",
              "value": "\nWrite into the "
            },
            {
              "type": "inlineCode",
              "value": "prompt"
            },
            {
              "type": "text",
              "value": " with "
            },
            {
              "type": "inlineCode",
              "value": "accept('Something')"
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "prompt('Message', async () => await accept('something'))\n\nprompt('Message', async () => await dismiss())\n\n// If prompt message is unknown, A RegExp which matches\n// the text can be used\n\nprompt(/^Please.+$name/, async () => await accept(\"NAME\"))\n\n// If prompt message is completely unknown, A callback can\n// be passed directly, it will get the message, defaultPrompt etc\n// as arguments which can be used to make a decision.\n\nprompt(async ({message}) => {\n  if(message === \"Please enter your age?\") {\n    await accept('20')\n   }\n})\n\n\n// Note: Taiko's `prompt` listener has to be setup before the promt\n// popup displays on the page. For example, if clicking on a button\n// shows the prompt popup, the Taiko script is\n\nprompt('Message', async () => await accept())\nawait click('Open Prompt')",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Identify prompt based on this message, regex or callback.",
        "lineNumber": 32,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "RegExp"
            },
            {
              "type": "NameExpression",
              "name": "function"
            }
          ]
        },
        "name": "messageOrCallback"
      },
      {
        "title": "param",
        "description": "Action to perform. accept/dismiss.",
        "lineNumber": 33,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 2138,
        "column": 0,
        "index": 80813
      },
      "end": {
        "line": 2172,
        "column": 3,
        "index": 81993
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2173,
          "column": 0,
          "index": 81994
        },
        "end": {
          "line": 2173,
          "column": 83,
          "index": 82077
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "prompt('Message', async () => await accept('something'))\n\nprompt('Message', async () => await dismiss())\n\n// If prompt message is unknown, A RegExp which matches\n// the text can be used\n\nprompt(/^Please.+$name/, async () => await accept(\"NAME\"))\n\n// If prompt message is completely unknown, A callback can\n// be passed directly, it will get the message, defaultPrompt etc\n// as arguments which can be used to make a decision.\n\nprompt(async ({message}) => {\n  if(message === \"Please enter your age?\") {\n    await accept('20')\n   }\n})\n\n\n// Note: Taiko's `prompt` listener has to be setup before the promt\n// popup displays on the page. For example, if clicking on a button\n// shows the prompt popup, the Taiko script is\n\nprompt('Message', async () => await accept())\nawait click('Open Prompt')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "message",
        "lineNumber": 2173
      },
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 33,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to perform. accept/dismiss."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      },
      {
        "title": "param",
        "name": "messageOrCallback",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Identify prompt based on this message, regex or callback."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "RegExp"
            },
            {
              "type": "NameExpression",
              "name": "function"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "prompt",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "prompt",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".prompt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept or dismiss a "
            },
            {
              "type": "inlineCode",
              "value": "confirm"
            },
            {
              "type": "text",
              "value": " popup matching a text."
            },
            {
              "type": "html",
              "value": "<br>"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "confirm('Message', async () => await accept())\n\nconfirm('Message', async () => await dismiss())\n\n// If alert message is unknown, A RegExp which matches\n// the text can be used\n\nconfirm(/^Are.+$sure, async () => await accept())\n\n// If alert message is completely unknown, A callback can\n// be passed directly, it will get the message, defaultPrompt etc\n// as arguments which can be used to make a decision.\n\nconfirm(async ({message,defaultPrompt}) => {\n if(message === \"Continue?\") {\n   await accept();\n }else{\n   await dismiss();\n }\n})\n\n\n// Note: Taiko's `confirm` listener has to be setup before the confirm\n// popup displays on the page. For example, if clicking on a button\n// shows the confirm popup, the Taiko script is\n\nconfirm('Message', async () => await accept())\nawait click('Show Confirm')",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Identify alert based on this message, regex or callback.",
        "lineNumber": 33,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "RegExp"
            },
            {
              "type": "NameExpression",
              "name": "function"
            }
          ]
        },
        "name": "messageOrCallback"
      },
      {
        "title": "param",
        "description": "Action to perform. accept/dismiss.",
        "lineNumber": 34,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 2175,
        "column": 0,
        "index": 82079
      },
      "end": {
        "line": 2210,
        "column": 3,
        "index": 83225
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2211,
          "column": 0,
          "index": 83226
        },
        "end": {
          "line": 2211,
          "column": 85,
          "index": 83311
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "confirm('Message', async () => await accept())\n\nconfirm('Message', async () => await dismiss())\n\n// If alert message is unknown, A RegExp which matches\n// the text can be used\n\nconfirm(/^Are.+$sure, async () => await accept())\n\n// If alert message is completely unknown, A callback can\n// be passed directly, it will get the message, defaultPrompt etc\n// as arguments which can be used to make a decision.\n\nconfirm(async ({message,defaultPrompt}) => {\n if(message === \"Continue?\") {\n   await accept();\n }else{\n   await dismiss();\n }\n})\n\n\n// Note: Taiko's `confirm` listener has to be setup before the confirm\n// popup displays on the page. For example, if clicking on a button\n// shows the confirm popup, the Taiko script is\n\nconfirm('Message', async () => await accept())\nawait click('Show Confirm')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "message",
        "lineNumber": 2211
      },
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 34,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to perform. accept/dismiss."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      },
      {
        "title": "param",
        "name": "messageOrCallback",
        "lineNumber": 33,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Identify alert based on this message, regex or callback."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "RegExp"
            },
            {
              "type": "NameExpression",
              "name": "function"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "confirm",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "confirm",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".confirm"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept or dismiss a "
            },
            {
              "type": "inlineCode",
              "value": "beforeunload"
            },
            {
              "type": "text",
              "value": " popup."
            },
            {
              "type": "html",
              "value": "<br>"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "beforeunload(async () => await accept())",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "beforeunload(async () => await dismiss())\n\n// Note: Taiko's `beforeunload` listener can be setup anywhere in the\n// script. The listener will run when the popup displays on the page.",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Action to perform. Accept/Dismiss.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 2213,
        "column": 0,
        "index": 83313
      },
      "end": {
        "line": 2225,
        "column": 3,
        "index": 83704
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2226,
          "column": 0,
          "index": 83705
        },
        "end": {
          "line": 2226,
          "column": 81,
          "index": 83786
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "beforeunload(async () => await accept())"
      },
      {
        "description": "beforeunload(async () => await dismiss())\n\n// Note: Taiko's `beforeunload` listener can be setup anywhere in the\n// script. The listener will run when the popup displays on the page."
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to perform. Accept/Dismiss."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "beforeunload",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "beforeunload",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".beforeunload"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Evaluates script on element matching the given selector."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await evaluate(link(\"something\"), (element) => element.style.backgroundColor)",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "await evaluate((element) => {\n     element.style.backgroundColor = 'red';\n})",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "await evaluate(() => {\n  // Callback function have access to all DOM APIs available in the developer console.\n  return document.title;\n} )",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "let options = { args: [ '.main-content', {backgroundColor:'red'}]}\n\nawait evaluate(link(\"something\"), (element, args) => {\n     element.style.backgroundColor = args[1].backgroundColor;\n     element.querySelector(args[0]).innerText = 'Some thing';\n}, options)",
        "lineNumber": 14
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 22,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "callback method to execute on the element or root HTML element when selector is not provided.<br>\nNOTE : In callback, we can access only inline css not the one which are define in css files.",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      },
      {
        "title": "param",
        "description": "options.",
        "lineNumber": 25,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 28,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "5000"
      },
      {
        "title": "param",
        "description": "Arguments to be passed to the provided callback.",
        "lineNumber": 29,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "options.args"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 30,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Set true to run script silently without printing messages.",
        "lineNumber": 31,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.silent",
        "default": "false"
      },
      {
        "title": "returns",
        "description": "Object with return value of callback given.",
        "lineNumber": 32,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2228,
        "column": 0,
        "index": 83788
      },
      "end": {
        "line": 2261,
        "column": 3,
        "index": 85763
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2262,
          "column": 0,
          "index": 85764
        },
        "end": {
          "line": 2297,
          "column": 2,
          "index": 86692
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await evaluate(link(\"something\"), (element) => element.style.backgroundColor)"
      },
      {
        "description": "await evaluate((element) => {\n     element.style.backgroundColor = 'red';\n})"
      },
      {
        "description": "await evaluate(() => {\n  // Callback function have access to all DOM APIs available in the developer console.\n  return document.title;\n} )"
      },
      {
        "description": "let options = { args: [ '.main-content', {backgroundColor:'red'}]}\n\nawait evaluate(link(\"something\"), (element, args) => {\n     element.style.backgroundColor = args[1].backgroundColor;\n     element.querySelector(args[0]).innerText = 'Some thing';\n}, options)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 22,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "callback method to execute on the element or root HTML element when selector is not provided."
                },
                {
                  "type": "html",
                  "value": "<br>"
                },
                {
                  "type": "text",
                  "value": "\nNOTE : In callback, we can access only inline css not the one which are define in css files."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "options."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 26,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }"
                    },
                    {
                      "type": "text",
                      "value": " in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "options"
                    },
                    {
                      "type": "text",
                      "value": " parameter."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 27,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "wait for navigation to start. Accepts value in milliseconds."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 28,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "5000"
          },
          {
            "title": "param",
            "name": "options.args",
            "lineNumber": 29,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Arguments to be passed to the provided callback."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Array"
            }
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 30,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.silent",
            "lineNumber": 31,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Set true to run script silently without printing messages."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Object with return value of callback given."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "evaluate",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "evaluate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".evaluate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function is used to improve the readability. It simply returns the parameter passed into it."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await attach('c:/abc.txt', to('Please select a file:'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": "selector - Web element selector.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2299,
        "column": 0,
        "index": 86694
      },
      "end": {
        "line": 2307,
        "column": 3,
        "index": 87003
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2308,
          "column": 0,
          "index": 87004
        },
        "end": {
          "line": 2308,
          "column": 37,
          "index": 87041
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await attach('c:/abc.txt', to('Please select a file:'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 2308
      },
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "selector - Web element selector."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "to",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "to",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".to"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function is used to improve the readability. It simply returns the parameter passed into it."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await write(\"user\", into(textBox('Username:')))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": "selector - Web element selector.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2310,
        "column": 0,
        "index": 87043
      },
      "end": {
        "line": 2318,
        "column": 3,
        "index": 87344
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2319,
          "column": 0,
          "index": 87345
        },
        "end": {
          "line": 2319,
          "column": 39,
          "index": 87384
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await write(\"user\", into(textBox('Username:')))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 2319
      },
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "selector - Web element selector."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "into",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "into",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".into"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept action to perform on dialogs"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "prompt('Message', async () => await accept('Something'))",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "prompt('Message', async () => await accept())",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Expected text of the dialog (optional)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "text"
      },
      {
        "title": "return",
        "description": "Resolves when dialog is accepted",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2374,
        "column": 0,
        "index": 88938
      },
      "end": {
        "line": 2384,
        "column": 3,
        "index": 89250
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2385,
          "column": 0,
          "index": 89251
        },
        "end": {
          "line": 2388,
          "column": 2,
          "index": 89404
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "prompt('Message', async () => await accept('Something'))"
      },
      {
        "description": "prompt('Message', async () => await accept())"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Expected text of the dialog (optional)"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "default": "''"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Resolves when dialog is accepted"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "accept",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "accept",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".accept"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Dismiss action to perform on dialogs"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "prompt('Message', async () => await dismiss())",
        "lineNumber": 3
      },
      {
        "title": "return",
        "description": "Resolves when dialog is dismissed",
        "lineNumber": 6,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2390,
        "column": 0,
        "index": 89406
      },
      "end": {
        "line": 2397,
        "column": 3,
        "index": 89584
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2398,
          "column": 0,
          "index": 89585
        },
        "end": {
          "line": 2401,
          "column": 2,
          "index": 89726
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "prompt('Message', async () => await dismiss())"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Resolves when dialog is dismissed"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "dismiss",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dismiss",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".dismiss"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Lets you read the global configurations."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "getConfig(\"retryInterval\");",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Specifies the name of the configuration option/parameter you want to get (optional).\nIf not specified, returns a shallow copy of the full global configuration.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "optionName"
      },
      {
        "title": "param",
        "description": "\"navigationTimeout\" Navigation timeout value in milliseconds for navigation after performing\n[goto](/api/goto), [click](/api/click), [doubleClick](/api/doubleclick), [rightClick](/api/rightclick),\n[write](/api/write), [clear](/api/clear), [press](/api/press) and [evaluate](/api/evaluate).",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      },
      {
        "title": "param",
        "description": "\"observeTime\" Option to modify delay time in milliseconds for observe mode.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      },
      {
        "title": "param",
        "description": "\"retryInterval\" Option to modify delay time in milliseconds to retry the search of element existence.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      },
      {
        "title": "param",
        "description": "\"retryTimeout\" Option to modify timeout in milliseconds while retrying the search of element existence.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      },
      {
        "title": "param",
        "description": "\"observe\" Option to run each command after a delay. Useful to observe what is happening in the browser.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      },
      {
        "title": "param",
        "description": "\"waitForNavigation\" Wait for navigation after performing [goto](/api/goto), [click](/api/click),\n[doubleClick](/api/doubleclick), [rightClick](/api/rightclick), [write](/api/write), [clear](/api/clear),\n[press](/api/press) and [evaluate](/api/evaluate).",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      },
      {
        "title": "param",
        "description": "\"ignoreSSLErrors\" Option to ignore SSL errors encountered by the browser (defaults to true).",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      },
      {
        "title": "param",
        "description": "\"headful\" Option to open browser in headless/headful mode.",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      },
      {
        "title": "param",
        "description": "\"highlightOnAction\" Option to highlight an element on action.",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "string"
      }
    ],
    "loc": {
      "start": {
        "line": 2467,
        "column": 0,
        "index": 91624
      },
      "end": {
        "line": 2488,
        "column": 3,
        "index": 93309
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2489,
          "column": 0,
          "index": 93310
        },
        "end": {
          "line": 2489,
          "column": 37,
          "index": 93347
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "getConfig(\"retryInterval\");"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "optionName",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Specifies the name of the configuration option/parameter you want to get (optional).\nIf not specified, returns a shallow copy of the full global configuration."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"navigationTimeout\" Navigation timeout value in milliseconds for navigation after performing\n"
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/goto",
                  "children": [
                    {
                      "type": "text",
                      "value": "goto"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/click",
                  "children": [
                    {
                      "type": "text",
                      "value": "click"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/doubleclick",
                  "children": [
                    {
                      "type": "text",
                      "value": "doubleClick"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/rightclick",
                  "children": [
                    {
                      "type": "text",
                      "value": "rightClick"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ",\n"
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/write",
                  "children": [
                    {
                      "type": "text",
                      "value": "write"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/clear",
                  "children": [
                    {
                      "type": "text",
                      "value": "clear"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/press",
                  "children": [
                    {
                      "type": "text",
                      "value": "press"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " and "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/evaluate",
                  "children": [
                    {
                      "type": "text",
                      "value": "evaluate"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"observeTime\" Option to modify delay time in milliseconds for observe mode."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"retryInterval\" Option to modify delay time in milliseconds to retry the search of element existence."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"retryTimeout\" Option to modify timeout in milliseconds while retrying the search of element existence."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"observe\" Option to run each command after a delay. Useful to observe what is happening in the browser."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"waitForNavigation\" Wait for navigation after performing "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/goto",
                  "children": [
                    {
                      "type": "text",
                      "value": "goto"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/click",
                  "children": [
                    {
                      "type": "text",
                      "value": "click"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ",\n"
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/doubleclick",
                  "children": [
                    {
                      "type": "text",
                      "value": "doubleClick"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/rightclick",
                  "children": [
                    {
                      "type": "text",
                      "value": "rightClick"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/write",
                  "children": [
                    {
                      "type": "text",
                      "value": "write"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/clear",
                  "children": [
                    {
                      "type": "text",
                      "value": "clear"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": ",\n"
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/press",
                  "children": [
                    {
                      "type": "text",
                      "value": "press"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " and "
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "/api/evaluate",
                  "children": [
                    {
                      "type": "text",
                      "value": "evaluate"
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"ignoreSSLErrors\" Option to ignore SSL errors encountered by the browser (defaults to true)."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"headful\" Option to open browser in headless/headful mode."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "string",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"highlightOnAction\" Option to highlight an element on action."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "getConfig",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "getConfig",
        "scope": "static"
      }
    ],
    "namespace": ".getConfig"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Lets you configure global configurations."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "setConfig( { observeTime: 3000});",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after performing\n<a href=\"#opentab\">openTab</a>, <a href=\"#goto\">goto</a>, <a href=\"#reload\">reload</a>, <a href=\"#goback\">goBack</a>,\n<a href=\"#goforward\">goForward</a>, <a href=\"#click\">click</a>, <a href=\"#write\">write</a>, <a href=\"#clear\">clear</a>,\n<a href=\"#press\">press</a> and <a href=\"#evaluate\">evaluate</a>.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Option to modify delay time in milliseconds for observe mode.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.observeTime",
        "default": "3000"
      },
      {
        "title": "param",
        "description": "Option to modify delay time in milliseconds to retry the search of element existence.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.retryInterval",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Option to modify timeout in milliseconds while retrying the search of element existence.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.retryTimeout",
        "default": "10000"
      },
      {
        "title": "param",
        "description": "Option to run each command after a delay. Useful to observe what is happening in the browser.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.observe",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Wait for navigation after performing <a href=\"#goto\">goto</a>, <a href=\"#click\">click</a>,\n<a href=\"#doubleclick\">doubleClick</a>, <a href=\"#rightclick\">rightClick</a>, <a href=\"#write\">write</a>, <a href=\"#clear\">clear</a>,\n<a href=\"#press\">press</a> and <a href=\"#evaluate\">evaluate</a>.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Wait for events after performing <a href=\"#goto\">goto</a>, <a href=\"#click\">click</a>,\n<a href=\"#doubleclick\">doubleClick</a>, <a href=\"#rightclick\">rightClick</a>, <a href=\"#write\">write</a>, <a href=\"#clear\">clear</a>,\n<a href=\"#press\">press</a> and <a href=\"#evaluate\">evaluate</a>. Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle',\n'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Option to ignore SSL errors encountered by the browser.",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.ignoreSSLErrors",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Option to open browser in headless/headful mode.",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.headful",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Option to highlight an element on action.",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.highlightOnAction",
        "default": "false"
      }
    ],
    "loc": {
      "start": {
        "line": 2491,
        "column": 0,
        "index": 93349
      },
      "end": {
        "line": 2516,
        "column": 3,
        "index": 95641
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2517,
          "column": 0,
          "index": 95642
        },
        "end": {
          "line": 2517,
          "column": 37,
          "index": 95679
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "setConfig( { observeTime: 3000});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after performing\n"
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#opentab\">"
                    },
                    {
                      "type": "text",
                      "value": "openTab"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goto\">"
                    },
                    {
                      "type": "text",
                      "value": "goto"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#reload\">"
                    },
                    {
                      "type": "text",
                      "value": "reload"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goback\">"
                    },
                    {
                      "type": "text",
                      "value": "goBack"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ",\n"
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goforward\">"
                    },
                    {
                      "type": "text",
                      "value": "goForward"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#click\">"
                    },
                    {
                      "type": "text",
                      "value": "click"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#write\">"
                    },
                    {
                      "type": "text",
                      "value": "write"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#clear\">"
                    },
                    {
                      "type": "text",
                      "value": "clear"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ",\n"
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#press\">"
                    },
                    {
                      "type": "text",
                      "value": "press"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#evaluate\">"
                    },
                    {
                      "type": "text",
                      "value": "evaluate"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.observeTime",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to modify delay time in milliseconds for observe mode."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "3000"
          },
          {
            "title": "param",
            "name": "options.retryInterval",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to modify delay time in milliseconds to retry the search of element existence."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.retryTimeout",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to modify timeout in milliseconds while retrying the search of element existence."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "10000"
          },
          {
            "title": "param",
            "name": "options.observe",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to run each command after a delay. Useful to observe what is happening in the browser."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after performing "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goto\">"
                    },
                    {
                      "type": "text",
                      "value": "goto"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#click\">"
                    },
                    {
                      "type": "text",
                      "value": "click"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ",\n"
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#doubleclick\">"
                    },
                    {
                      "type": "text",
                      "value": "doubleClick"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#rightclick\">"
                    },
                    {
                      "type": "text",
                      "value": "rightClick"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#write\">"
                    },
                    {
                      "type": "text",
                      "value": "write"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#clear\">"
                    },
                    {
                      "type": "text",
                      "value": "clear"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ",\n"
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#press\">"
                    },
                    {
                      "type": "text",
                      "value": "press"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#evaluate\">"
                    },
                    {
                      "type": "text",
                      "value": "evaluate"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for events after performing "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goto\">"
                    },
                    {
                      "type": "text",
                      "value": "goto"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#click\">"
                    },
                    {
                      "type": "text",
                      "value": "click"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ",\n"
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#doubleclick\">"
                    },
                    {
                      "type": "text",
                      "value": "doubleClick"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#rightclick\">"
                    },
                    {
                      "type": "text",
                      "value": "rightClick"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#write\">"
                    },
                    {
                      "type": "text",
                      "value": "write"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#clear\">"
                    },
                    {
                      "type": "text",
                      "value": "clear"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ",\n"
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#press\">"
                    },
                    {
                      "type": "text",
                      "value": "press"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#evaluate\">"
                    },
                    {
                      "type": "text",
                      "value": "evaluate"
                    },
                    {
                      "type": "html",
                      "value": "</a>"
                    },
                    {
                      "type": "text",
                      "value": ". Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle',\n'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint', 'targetNavigated']"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.ignoreSSLErrors",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to ignore SSL errors encountered by the browser."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.headful",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to open browser in headless/headful mode."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.highlightOnAction",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to highlight an element on action."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ]
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "setConfig",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setConfig",
        "scope": "static"
      }
    ],
    "namespace": ".setConfig"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes interceptor for the provided URL or all interceptors if no URL is specified"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "# case 1: Remove intercept for a single  URL :\nawait clearIntercept(requestUrl)\n# case 2: Reset intercept for all URL :\nawait clearIntercept()",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "request URL to intercept. Optional parameters",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "requestUrl"
      }
    ],
    "loc": {
      "start": {
        "line": 2708,
        "column": 0,
        "index": 99678
      },
      "end": {
        "line": 2718,
        "column": 3,
        "index": 100021
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2719,
          "column": 0,
          "index": 100022
        },
        "end": {
          "line": 2731,
          "column": 2,
          "index": 100463
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# case 1: Remove intercept for a single  URL :\nawait clearIntercept(requestUrl)\n# case 2: Reset intercept for all URL :\nawait clearIntercept()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "requestUrl",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "request URL to intercept. Optional parameters"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "clearIntercept",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clearIntercept",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clearIntercept"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns window's current URL."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await openBrowser();",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await goto(\"www.google.com\");",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await currentURL(); # returns \"https://www.google.com/?gws_rd=ssl\"",
        "lineNumber": 6
      },
      {
        "title": "returns",
        "description": "The URL of the current window.",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 849,
        "column": 0,
        "index": 32104
      },
      "end": {
        "line": 859,
        "column": 3,
        "index": 32373
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 860,
          "column": 0,
          "index": 32374
        },
        "end": {
          "line": 864,
          "column": 2,
          "index": 32548
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openBrowser();"
      },
      {
        "description": "await goto(\"www.google.com\");"
      },
      {
        "description": "await currentURL(); # returns \"https://www.google.com/?gws_rd=ssl\""
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The URL of the current window."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "currentURL",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "currentURL",
        "kind": "constant"
      }
    ],
    "namespace": "currentURL"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns page's title."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "await openBrowser();",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "await goto(\"www.google.com\");",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "await title(); # returns \"Google\"",
        "lineNumber": 6
      },
      {
        "title": "returns",
        "description": "The title of the current page.",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 867,
        "column": 0,
        "index": 32590
      },
      "end": {
        "line": 877,
        "column": 3,
        "index": 32818
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 878,
          "column": 0,
          "index": 32819
        },
        "end": {
          "line": 882,
          "column": 2,
          "index": 32966
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openBrowser();"
      },
      {
        "description": "await goto(\"www.google.com\");"
      },
      {
        "description": "await title(); # returns \"Google\""
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The title of the current page."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "title",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "title",
        "kind": "constant"
      }
    ],
    "namespace": "title"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function is used to wait for number of milliseconds given or a given element or a given condition."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "waitFor(5000)",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "waitFor(\"1 item in cart\")",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "waitFor(\"Order Created\", 2000)",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "waitFor(async () => !(await $(\"loading-text\").exists()))",
        "lineNumber": 9
      },
      {
        "title": "param",
        "description": "Element/condition to wait for",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "element"
      },
      {
        "title": "param",
        "description": "Time to wait. default to 10s",
        "lineNumber": 13,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "NameExpression",
              "name": "time"
            }
          ]
        },
        "name": "time"
      },
      {
        "title": "param",
        "description": "Custom message",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "options.message"
        },
        "name": "null-null"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2321,
        "column": 0,
        "index": 87386
      },
      "end": {
        "line": 2337,
        "column": 3,
        "index": 87881
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2339,
          "column": 0,
          "index": 87883
        },
        "end": {
          "line": 2370,
          "column": 2,
          "index": 88901
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "waitFor(5000)"
      },
      {
        "description": "waitFor(\"1 item in cart\")"
      },
      {
        "description": "waitFor(\"Order Created\", 2000)"
      },
      {
        "description": "waitFor(async () => !(await $(\"loading-text\").exists()))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "element",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Element/condition to wait for"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "time",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Time to wait. default to 10s"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "NameExpression",
              "name": "time"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 2339,
        "default": "{}"
      },
      {
        "title": "param",
        "name": "null-null",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Custom message"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "options.message"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "waitFor",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "waitFor",
        "kind": "constant"
      }
    ],
    "namespace": "waitFor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Starts a REPL when Taiko is invoked as a runner with "
            },
            {
              "type": "inlineCode",
              "value": "--load"
            },
            {
              "type": "text",
              "value": " option."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "name",
        "description": null,
        "lineNumber": 2,
        "name": "repl"
      },
      {
        "title": "example",
        "description": "const { goto } = require('taiko');\nconst { repl } = require('taiko/recorder');\n(async () => {\nawait goto('google.com')\nawait goto('google.com')\nawait repl();\n})();",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "taiko --load script.js",
        "lineNumber": 12
      }
    ],
    "loc": {
      "start": {
        "line": 2403,
        "column": 0,
        "index": 89728
      },
      "end": {
        "line": 2417,
        "column": 3,
        "index": 90060
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2425,
          "column": 0,
          "index": 90264
        },
        "end": {
          "line": 2438,
          "column": 2,
          "index": 90619
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const { goto } = require('taiko');\nconst { repl } = require('taiko/recorder');\n(async () => {\nawait goto('google.com')\nawait goto('google.com')\nawait repl();\n})();"
      },
      {
        "description": "taiko --load script.js"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "repl",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "repl"
      }
    ],
    "namespace": "repl"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function is used by taiko to initiate the plugin."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "param",
        "description": "unique id or name of the plugin",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "ID"
      },
      {
        "title": "param",
        "description": "callback method to set taiko instance for plugin",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Function"
        },
        "name": "init"
      }
    ],
    "loc": {
      "start": {
        "line": 2419,
        "column": 0,
        "index": 90062
      },
      "end": {
        "line": 2424,
        "column": 3,
        "index": 90263
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2425,
          "column": 0,
          "index": 90264
        },
        "end": {
          "line": 2438,
          "column": 2,
          "index": 90619
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "id",
        "lineNumber": 2425
      },
      {
        "title": "param",
        "name": "init",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "callback method to set taiko instance for plugin"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Function"
        }
      },
      {
        "title": "param",
        "name": "ID",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "unique id or name of the plugin"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "loadPlugin",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "loadPlugin",
        "kind": "constant"
      }
    ],
    "namespace": "loadPlugin"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Identifies an element on the page."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "callback",
        "description": "selector",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "link('Sign in')",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "button('Get Started')",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "$('#id')",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "text('Home')",
        "lineNumber": 10
      },
      {
        "title": "param",
        "description": "Text to identify the element.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "text"
      }
    ],
    "loc": {
      "start": {
        "line": 2563,
        "column": 0,
        "index": 96901
      },
      "end": {
        "line": 2577,
        "column": 3,
        "index": 97150
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2611,
          "column": 0,
          "index": 97842
        },
        "end": {
          "line": 2611,
          "column": 21,
          "index": 97863
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "link('Sign in')"
      },
      {
        "description": "button('Get Started')"
      },
      {
        "description": "$('#id')"
      },
      {
        "description": "text('Home')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text to identify the element."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "selector",
    "type": {
      "type": "NameExpression",
      "name": "Function"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "selector",
        "kind": "typedef"
      }
    ],
    "namespace": "selector"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Lets you perform relative HTML element searches."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "callback",
        "description": "relativeSelector",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "near('Home')",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "toLeftOf('Sign in')",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "toRightOf('Get Started')",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "above('Sign in')",
        "lineNumber": 10
      },
      {
        "title": "example",
        "description": "below('Home')",
        "lineNumber": 12
      },
      {
        "title": "example",
        "description": "link('Sign In',near(\"Home\"),toLeftOf(\"Sign Out\")) - Multiple selectors can be used to perform relative search",
        "lineNumber": 14
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 17,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2579,
        "column": 0,
        "index": 97152
      },
      "end": {
        "line": 2598,
        "column": 3,
        "index": 97634
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2611,
          "column": 0,
          "index": 97842
        },
        "end": {
          "line": 2611,
          "column": 21,
          "index": 97863
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "near('Home')"
      },
      {
        "description": "toLeftOf('Sign in')"
      },
      {
        "description": "toRightOf('Get Started')"
      },
      {
        "description": "above('Sign in')"
      },
      {
        "description": "below('Home')"
      },
      {
        "description": "link('Sign In',near(\"Home\"),toLeftOf(\"Sign Out\")) - Multiple selectors can be used to perform relative search"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "relativeSelector",
    "type": {
      "type": "NameExpression",
      "name": "Function"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "relativeSelector",
        "kind": "typedef"
      }
    ],
    "namespace": "relativeSelector"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Represents a relative HTML element search. This is returned by "
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "RelativeSearchElement"
      },
      {
        "title": "example",
        "description": "above('username')",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "near('Get Started')",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 2600,
        "column": 0,
        "index": 97636
      },
      "end": {
        "line": 2609,
        "column": 3,
        "index": 97840
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2611,
          "column": 0,
          "index": 97842
        },
        "end": {
          "line": 2611,
          "column": 21,
          "index": 97863
        }
      },
      "file": "C:\\Users\\matte\\Downloads\\Verification-Bot\\node_modules\\taiko\\lib\\taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "above('username')"
      },
      {
        "description": "near('Get Started')"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "class",
    "name": "RelativeSearchElement",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "RelativeSearchElement",
        "kind": "class"
      }
    ],
    "namespace": "RelativeSearchElement"
  }
]